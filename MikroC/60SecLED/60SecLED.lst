;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 16/09/2015 03:58:06
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x294D      	GOTO       333
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00E8      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00E9      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A1      	MOVWF      33
0x000D	0x087C      	MOVF       R12, 0
0x000E	0x00A0      	MOVWF      32
0x000F	0x0804      	MOVF       FSR, 0
0x0010	0x00A2      	MOVWF      34
;60SecLED.c,138 :: 		void interrupt(void) {
;60SecLED.c,141 :: 		INTCON.GIE = 0;
0x0011	0x138B      	BCF        INTCON, 7
;60SecLED.c,144 :: 		i = 0;
0x0012	0x01E4      	CLRF       _i
;60SecLED.c,147 :: 		freq = 59 - sec;
0x0013	0x0866      	MOVF       _sec, 0
0x0014	0x3C3B      	SUBLW      59
0x0015	0x00E7      	MOVWF      _freq
;60SecLED.c,150 :: 		run_led(sec,freq);
0x0016	0x0866      	MOVF       _sec, 0
0x0017	0x00EA      	MOVWF      FARG_run_led_s
0x0018	0x0867      	MOVF       _freq, 0
0x0019	0x00EB      	MOVWF      FARG_run_led_f
0x001A	0x20E2      	CALL       _run_led
;60SecLED.c,153 :: 		if(sec == 59)
0x001B	0x0866      	MOVF       _sec, 0
0x001C	0x3A3B      	XORLW      59
0x001D	0x1D03      	BTFSS      STATUS, 2
0x001E	0x2821      	GOTO       L_interrupt24
;60SecLED.c,154 :: 		sec = 0;
0x001F	0x01E6      	CLRF       _sec
0x0020	0x2825      	GOTO       L_interrupt25
L_interrupt24:
;60SecLED.c,156 :: 		sec++;
0x0021	0x0A66      	INCF       _sec, 0
0x0022	0x00F0      	MOVWF      R0
0x0023	0x0870      	MOVF       R0, 0
0x0024	0x00E6      	MOVWF      _sec
L_interrupt25:
;60SecLED.c,159 :: 		INTCON.INTF = 0;
0x0025	0x108B      	BCF        INTCON, 1
;60SecLED.c,162 :: 		INTCON.GIE = 1;
0x0026	0x178B      	BSF        INTCON, 7
;60SecLED.c,163 :: 		}
L_end_interrupt:
L__interrupt31:
0x0027	0x0821      	MOVF       33, 0
0x0028	0x00F0      	MOVWF      R0
0x0029	0x0820      	MOVF       32, 0
0x002A	0x00FC      	MOVWF      R12
0x002B	0x0822      	MOVF       34, 0
0x002C	0x0084      	MOVWF      FSR
0x002D	0x0869      	MOVF       ___savePCLATH, 0
0x002E	0x008A      	MOVWF      PCLATH
0x002F	0x0E68      	SWAPF      ___saveSTATUS, 0
0x0030	0x0083      	MOVWF      STATUS
0x0031	0x0EFF      	SWAPF      R15, 1
0x0032	0x0E7F      	SWAPF      R15, 0
0x0033	0x0009      	RETFIE
; end of _interrupt
_Mul_32x32_U:
;__Lib_Math.c,1774 :: 		
;__Lib_Math.c,1789 :: 		
0x0034	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,1790 :: 		
0x0035	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,1791 :: 		
0x0036	0x3022      	MOVLW      34
;__Lib_Math.c,1792 :: 		
0x0037	0x00FC      	MOVWF      R12
;__Lib_Math.c,1793 :: 		
0x0038	0x01F8      	CLRF       R8
;__Lib_Math.c,1794 :: 		
0x0039	0x01F9      	CLRF       R9
;__Lib_Math.c,1795 :: 		
0x003A	0x01FA      	CLRF       R10
;__Lib_Math.c,1796 :: 		
0x003B	0x01FB      	CLRF       R11
;__Lib_Math.c,1798 :: 		
_NEXT:
;__Lib_Math.c,1802 :: 		
0x003C	0x03FC      	DECF       R12, 1
;__Lib_Math.c,1803 :: 		
0x003D	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1804 :: 		
0x003E	0x286A      	GOTO       _EXIT2
;__Lib_Math.c,1805 :: 		
0x003F	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,1807 :: 		
_LOOP:
;__Lib_Math.c,1816 :: 		
0x0040	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,1817 :: 		
0x0041	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,1818 :: 		
0x0042	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,1819 :: 		
0x0043	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,1820 :: 		
0x0044	0x0CF3      	RRF        R3, 1
;__Lib_Math.c,1821 :: 		
0x0045	0x0CF2      	RRF        R2, 1
;__Lib_Math.c,1822 :: 		
0x0046	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,1823 :: 		
0x0047	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,1828 :: 		
0x0048	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1829 :: 		
0x0049	0x283C      	GOTO       _NEXT
;__Lib_Math.c,1830 :: 		
0x004A	0x03FC      	DECF       R12, 1
;__Lib_Math.c,1831 :: 		
0x004B	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1832 :: 		
0x004C	0x285C      	GOTO       _EXIT1
;__Lib_Math.c,1839 :: 		
0x004D	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1840 :: 		
0x004E	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1841 :: 		
0x004F	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1842 :: 		
0x0050	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1843 :: 		
0x0051	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1844 :: 		
0x0052	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1845 :: 		
0x0053	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1846 :: 		
0x0054	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1847 :: 		
0x0055	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1848 :: 		
0x0056	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1849 :: 		
0x0057	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1850 :: 		
0x0058	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1851 :: 		
0x0059	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1852 :: 		
0x005A	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1854 :: 		
0x005B	0x2840      	GOTO       _LOOP
;__Lib_Math.c,1856 :: 		
_EXIT1:
;__Lib_Math.c,1861 :: 		
0x005C	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1862 :: 		
0x005D	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1863 :: 		
0x005E	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1864 :: 		
0x005F	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1865 :: 		
0x0060	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1866 :: 		
0x0061	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1867 :: 		
0x0062	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1868 :: 		
0x0063	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1869 :: 		
0x0064	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1870 :: 		
0x0065	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1871 :: 		
0x0066	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1872 :: 		
0x0067	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1873 :: 		
0x0068	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1874 :: 		
0x0069	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1877 :: 		
_EXIT2:
;__Lib_Math.c,1879 :: 		
L_end_Mul_32x32_U:
0x006A	0x0008      	RETURN
; end of _Mul_32x32_U
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x006B	0x1283      	BCF        STATUS, 5
0x006C	0x0860      	MOVF       ___DoICPAddr+1, 0
0x006D	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x006E	0x085F      	MOVF       ___DoICPAddr, 0
0x006F	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0070	0x0008      	RETURN
; end of _____DoICP
_VDelay_ms:
;__Lib_Delays.c,82 :: 		void VDelay_ms(unsigned Time_ms){
;__Lib_Delays.c,84 :: 		NumberOfCyc = Clock_kHz()>>2; // this will be done by compiler, no asm will be genereated except that for assignment;
0x0071	0x30D0      	MOVLW      208
0x0072	0x1683      	BSF        STATUS, 5
0x0073	0x00A0      	MOVWF      VDelay_ms_NumberOfCyc_L0
0x0074	0x3007      	MOVLW      7
0x0075	0x00A1      	MOVWF      VDelay_ms_NumberOfCyc_L0+1
0x0076	0x01A2      	CLRF       VDelay_ms_NumberOfCyc_L0+2
0x0077	0x01A3      	CLRF       VDelay_ms_NumberOfCyc_L0+3
;__Lib_Delays.c,85 :: 		NumberOfCyc *= Time_ms;
0x0078	0x30D0      	MOVLW      208
0x0079	0x00F0      	MOVWF      R0
0x007A	0x3007      	MOVLW      7
0x007B	0x00F1      	MOVWF      R0+1
0x007C	0x3000      	MOVLW      0
0x007D	0x00F2      	MOVWF      R0+2
0x007E	0x3000      	MOVLW      0
0x007F	0x00F3      	MOVWF      R0+3
0x0080	0x1283      	BCF        STATUS, 5
0x0081	0x086C      	MOVF       FARG_VDelay_ms_Time_ms, 0
0x0082	0x00F4      	MOVWF      R4
0x0083	0x086D      	MOVF       FARG_VDelay_ms_Time_ms+1, 0
0x0084	0x00F5      	MOVWF      R4+1
0x0085	0x01F6      	CLRF       R4+2
0x0086	0x01F7      	CLRF       R4+3
0x0087	0x2034      	CALL       _Mul_32x32_U
0x0088	0x0870      	MOVF       R0, 0
0x0089	0x1683      	BSF        STATUS, 5
0x008A	0x00A0      	MOVWF      VDelay_ms_NumberOfCyc_L0
0x008B	0x0871      	MOVF       R0+1, 0
0x008C	0x00A1      	MOVWF      VDelay_ms_NumberOfCyc_L0+1
0x008D	0x0872      	MOVF       R0+2, 0
0x008E	0x00A2      	MOVWF      VDelay_ms_NumberOfCyc_L0+2
0x008F	0x0873      	MOVF       R0+3, 0
0x0090	0x00A3      	MOVWF      VDelay_ms_NumberOfCyc_L0+3
;__Lib_Delays.c,86 :: 		if (NumberOfCyc < 690)
0x0091	0x3000      	MOVLW      0
0x0092	0x0273      	SUBWF      R0+3, 0
0x0093	0x1D03      	BTFSS      STATUS, 2
0x0094	0x289F      	GOTO       L__VDelay_ms38
0x0095	0x3000      	MOVLW      0
0x0096	0x0272      	SUBWF      R0+2, 0
0x0097	0x1D03      	BTFSS      STATUS, 2
0x0098	0x289F      	GOTO       L__VDelay_ms38
0x0099	0x3002      	MOVLW      2
0x009A	0x0271      	SUBWF      R0+1, 0
0x009B	0x1D03      	BTFSS      STATUS, 2
0x009C	0x289F      	GOTO       L__VDelay_ms38
0x009D	0x30B2      	MOVLW      178
0x009E	0x0270      	SUBWF      R0, 0
L__VDelay_ms38:
0x009F	0x1803      	BTFSC      STATUS, 0
0x00A0	0x28A2      	GOTO       L_VDelay_ms15
;__Lib_Delays.c,87 :: 		return;
0x00A1	0x28E1      	GOTO       L_end_VDelay_ms
L_VDelay_ms15:
;__Lib_Delays.c,88 :: 		NumberOfCyc -= 690;
0x00A2	0x30B2      	MOVLW      178
0x00A3	0x00F0      	MOVWF      R0
0x00A4	0x3002      	MOVLW      2
0x00A5	0x00F1      	MOVWF      R0+1
0x00A6	0x01F2      	CLRF       R0+2
0x00A7	0x01F3      	CLRF       R0+3
0x00A8	0x0870      	MOVF       R0, 0
0x00A9	0x02A0      	SUBWF      VDelay_ms_NumberOfCyc_L0, 1
0x00AA	0x0871      	MOVF       R0+1, 0
0x00AB	0x1C03      	BTFSS      STATUS, 0
0x00AC	0x0F71      	INCFSZ     R0+1, 0
0x00AD	0x02A1      	SUBWF      VDelay_ms_NumberOfCyc_L0+1, 1
0x00AE	0x0872      	MOVF       R0+2, 0
0x00AF	0x1C03      	BTFSS      STATUS, 0
0x00B0	0x0F72      	INCFSZ     R0+2, 0
0x00B1	0x02A2      	SUBWF      VDelay_ms_NumberOfCyc_L0+2, 1
0x00B2	0x0873      	MOVF       R0+3, 0
0x00B3	0x1C03      	BTFSS      STATUS, 0
0x00B4	0x0F73      	INCFSZ     R0+3, 0
0x00B5	0x02A3      	SUBWF      VDelay_ms_NumberOfCyc_L0+3, 1
;__Lib_Delays.c,89 :: 		NumberOfCyc =  NumberOfCyc >> 5; // Dec and While below take around 32 instructions
0x00B6	0x3005      	MOVLW      5
0x00B7	0x00F0      	MOVWF      R0
0x00B8	0x0870      	MOVF       R0, 0
L__VDelay_ms39:
0x00B9	0x1903      	BTFSC      STATUS, 2
0x00BA	0x28C2      	GOTO       L__VDelay_ms40
0x00BB	0x0CA3      	RRF        VDelay_ms_NumberOfCyc_L0+3, 1
0x00BC	0x0CA2      	RRF        VDelay_ms_NumberOfCyc_L0+2, 1
0x00BD	0x0CA1      	RRF        VDelay_ms_NumberOfCyc_L0+1, 1
0x00BE	0x0CA0      	RRF        VDelay_ms_NumberOfCyc_L0, 1
0x00BF	0x13A3      	BCF        VDelay_ms_NumberOfCyc_L0+3, 7
0x00C0	0x3EFF      	ADDLW      255
0x00C1	0x28B9      	GOTO       L__VDelay_ms39
L__VDelay_ms40:
;__Lib_Delays.c,90 :: 		while (NumberOfCyc--)
L_VDelay_ms16:
0x00C2	0x0820      	MOVF       VDelay_ms_NumberOfCyc_L0, 0
0x00C3	0x00F0      	MOVWF      R0
0x00C4	0x0821      	MOVF       VDelay_ms_NumberOfCyc_L0+1, 0
0x00C5	0x00F1      	MOVWF      R0+1
0x00C6	0x0822      	MOVF       VDelay_ms_NumberOfCyc_L0+2, 0
0x00C7	0x00F2      	MOVWF      R0+2
0x00C8	0x0823      	MOVF       VDelay_ms_NumberOfCyc_L0+3, 0
0x00C9	0x00F3      	MOVWF      R0+3
0x00CA	0x3001      	MOVLW      1
0x00CB	0x02A0      	SUBWF      VDelay_ms_NumberOfCyc_L0, 1
0x00CC	0x1C03      	BTFSS      STATUS, 0
0x00CD	0x02A1      	SUBWF      VDelay_ms_NumberOfCyc_L0+1, 1
0x00CE	0x1C03      	BTFSS      STATUS, 0
0x00CF	0x02A2      	SUBWF      VDelay_ms_NumberOfCyc_L0+2, 1
0x00D0	0x1C03      	BTFSS      STATUS, 0
0x00D1	0x02A3      	SUBWF      VDelay_ms_NumberOfCyc_L0+3, 1
0x00D2	0x0870      	MOVF       R0, 0
0x00D3	0x0471      	IORWF      R0+1, 0
0x00D4	0x0472      	IORWF      R0+2, 0
0x00D5	0x0473      	IORWF      R0+3, 0
0x00D6	0x1903      	BTFSC      STATUS, 2
0x00D7	0x28E1      	GOTO       L_VDelay_ms17
;__Lib_Delays.c,92 :: 		asm nop;
0x00D8	0x0000      	NOP
;__Lib_Delays.c,93 :: 		asm nop;
0x00D9	0x0000      	NOP
;__Lib_Delays.c,94 :: 		asm nop;
0x00DA	0x0000      	NOP
;__Lib_Delays.c,95 :: 		asm nop;
0x00DB	0x0000      	NOP
;__Lib_Delays.c,96 :: 		asm nop;
0x00DC	0x0000      	NOP
;__Lib_Delays.c,97 :: 		asm nop;
0x00DD	0x0000      	NOP
;__Lib_Delays.c,98 :: 		asm nop;
0x00DE	0x0000      	NOP
;__Lib_Delays.c,99 :: 		asm nop;
0x00DF	0x0000      	NOP
;__Lib_Delays.c,100 :: 		}
0x00E0	0x28C2      	GOTO       L_VDelay_ms16
L_VDelay_ms17:
;__Lib_Delays.c,101 :: 		}
L_end_VDelay_ms:
0x00E1	0x0008      	RETURN
; end of _VDelay_ms
_run_led:
;60SecLED.c,15 :: 		void run_led(char s, char f) {
;60SecLED.c,18 :: 		GPIO.B0 = 0;
0x00E2	0x1283      	BCF        STATUS, 5
0x00E3	0x1005      	BCF        GPIO, 0
;60SecLED.c,19 :: 		GPIO.B0 = 1;
0x00E4	0x1405      	BSF        GPIO, 0
;60SecLED.c,22 :: 		for(led = 60; led >= s; led--) {
0x00E5	0x303C      	MOVLW      60
0x00E6	0x00E5      	MOVWF      _led
L_run_led0:
0x00E7	0x3080      	MOVLW      128
0x00E8	0x1BE5      	BTFSC      _led, 7
0x00E9	0x307F      	MOVLW      127
0x00EA	0x00F0      	MOVWF      R0
0x00EB	0x3080      	MOVLW      128
0x00EC	0x0270      	SUBWF      R0, 0
0x00ED	0x1D03      	BTFSS      STATUS, 2
0x00EE	0x28F1      	GOTO       L__run_led27
0x00EF	0x086A      	MOVF       FARG_run_led_s, 0
0x00F0	0x0265      	SUBWF      _led, 0
L__run_led27:
0x00F1	0x1C03      	BTFSS      STATUS, 0
0x00F2	0x2940      	GOTO       L_run_led1
;60SecLED.c,25 :: 		for(reg = 0; reg < s; reg++) {
0x00F3	0x01E1      	CLRF       _reg
L_run_led3:
0x00F4	0x3080      	MOVLW      128
0x00F5	0x1BE1      	BTFSC      _reg, 7
0x00F6	0x307F      	MOVLW      127
0x00F7	0x00F0      	MOVWF      R0
0x00F8	0x3080      	MOVLW      128
0x00F9	0x0270      	SUBWF      R0, 0
0x00FA	0x1D03      	BTFSS      STATUS, 2
0x00FB	0x28FE      	GOTO       L__run_led28
0x00FC	0x086A      	MOVF       FARG_run_led_s, 0
0x00FD	0x0261      	SUBWF      _reg, 0
L__run_led28:
0x00FE	0x1803      	BTFSC      STATUS, 0
0x00FF	0x2908      	GOTO       L_run_led4
;60SecLED.c,27 :: 		GPIO.B5 = 1;
0x0100	0x1685      	BSF        GPIO, 5
;60SecLED.c,28 :: 		GPIO.B4 = 1;
0x0101	0x1605      	BSF        GPIO, 4
;60SecLED.c,29 :: 		GPIO.B4 = 0;
0x0102	0x1205      	BCF        GPIO, 4
;60SecLED.c,25 :: 		for(reg = 0; reg < s; reg++) {
0x0103	0x0A61      	INCF       _reg, 0
0x0104	0x00F0      	MOVWF      R0
0x0105	0x0870      	MOVF       R0, 0
0x0106	0x00E1      	MOVWF      _reg
;60SecLED.c,32 :: 		}
0x0107	0x28F4      	GOTO       L_run_led3
L_run_led4:
;60SecLED.c,35 :: 		for( ; reg < led; reg++) {
L_run_led6:
0x0108	0x3080      	MOVLW      128
0x0109	0x0661      	XORWF      _reg, 0
0x010A	0x00F0      	MOVWF      R0
0x010B	0x3080      	MOVLW      128
0x010C	0x0665      	XORWF      _led, 0
0x010D	0x0270      	SUBWF      R0, 0
0x010E	0x1803      	BTFSC      STATUS, 0
0x010F	0x2918      	GOTO       L_run_led7
;60SecLED.c,37 :: 		GPIO.B5 = 0;
0x0110	0x1285      	BCF        GPIO, 5
;60SecLED.c,38 :: 		GPIO.B4 = 1;
0x0111	0x1605      	BSF        GPIO, 4
;60SecLED.c,39 :: 		GPIO.B4 = 0;
0x0112	0x1205      	BCF        GPIO, 4
;60SecLED.c,35 :: 		for( ; reg < led; reg++) {
0x0113	0x0A61      	INCF       _reg, 0
0x0114	0x00F0      	MOVWF      R0
0x0115	0x0870      	MOVF       R0, 0
0x0116	0x00E1      	MOVWF      _reg
;60SecLED.c,41 :: 		}
0x0117	0x2908      	GOTO       L_run_led6
L_run_led7:
;60SecLED.c,44 :: 		GPIO.B5 = 1;
0x0118	0x1685      	BSF        GPIO, 5
;60SecLED.c,45 :: 		GPIO.B4 = 1;
0x0119	0x1605      	BSF        GPIO, 4
;60SecLED.c,46 :: 		GPIO.B4 = 0;
0x011A	0x1205      	BCF        GPIO, 4
;60SecLED.c,47 :: 		reg++;
0x011B	0x0A61      	INCF       _reg, 0
0x011C	0x00F0      	MOVWF      R0
0x011D	0x0870      	MOVF       R0, 0
0x011E	0x00E1      	MOVWF      _reg
;60SecLED.c,50 :: 		for( ; reg < 64; reg++) {
L_run_led9:
0x011F	0x3080      	MOVLW      128
0x0120	0x0661      	XORWF      _reg, 0
0x0121	0x00F0      	MOVWF      R0
0x0122	0x3080      	MOVLW      128
0x0123	0x3A40      	XORLW      64
0x0124	0x0270      	SUBWF      R0, 0
0x0125	0x1803      	BTFSC      STATUS, 0
0x0126	0x292F      	GOTO       L_run_led10
;60SecLED.c,52 :: 		GPIO.B5 = 0;
0x0127	0x1285      	BCF        GPIO, 5
;60SecLED.c,53 :: 		GPIO.B4 = 1;
0x0128	0x1605      	BSF        GPIO, 4
;60SecLED.c,54 :: 		GPIO.B4 = 0;
0x0129	0x1205      	BCF        GPIO, 4
;60SecLED.c,50 :: 		for( ; reg < 64; reg++) {
0x012A	0x0A61      	INCF       _reg, 0
0x012B	0x00F0      	MOVWF      R0
0x012C	0x0870      	MOVF       R0, 0
0x012D	0x00E1      	MOVWF      _reg
;60SecLED.c,57 :: 		}
0x012E	0x291F      	GOTO       L_run_led9
L_run_led10:
;60SecLED.c,60 :: 		GPIO.B1 = 1;
0x012F	0x1485      	BSF        GPIO, 1
;60SecLED.c,61 :: 		GPIO.B1 = 0;
0x0130	0x1085      	BCF        GPIO, 1
;60SecLED.c,64 :: 		VDelay_ms(delays[f]);
0x0131	0x086B      	MOVF       FARG_run_led_f, 0
0x0132	0x3E23      	ADDLW      _delays
0x0133	0x0084      	MOVWF      FSR
0x0134	0x0800      	MOVF       INDF, 0
0x0135	0x00EC      	MOVWF      FARG_VDelay_ms_Time_ms
0x0136	0x01ED      	CLRF       FARG_VDelay_ms_Time_ms+1
0x0137	0x3000      	MOVLW      0
0x0138	0x00ED      	MOVWF      FARG_VDelay_ms_Time_ms+1
0x0139	0x2071      	CALL       _VDelay_ms
;60SecLED.c,22 :: 		for(led = 60; led >= s; led--) {
0x013A	0x1283      	BCF        STATUS, 5
0x013B	0x0365      	DECF       _led, 0
0x013C	0x00F0      	MOVWF      R0
0x013D	0x0870      	MOVF       R0, 0
0x013E	0x00E5      	MOVWF      _led
;60SecLED.c,67 :: 		}
0x013F	0x28E7      	GOTO       L_run_led0
L_run_led1:
;60SecLED.c,69 :: 		}
L_end_run_led:
0x0140	0x0008      	RETURN
; end of _run_led
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0141	0x206B      	CALL       _____DoICP
0x0142	0x118A      	BCF        PCLATH, 3
0x0143	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0144	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0145	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0146	0x0ADF      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0147	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0148	0x0AE0      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0149	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x014A	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x014B	0x2941      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x014C	0x0008      	RETURN
; end of ___CC2DW
_main:
0x014D	0x21CE      	CALL       462
;60SecLED.c,71 :: 		void main(void) {
;60SecLED.c,74 :: 		reg = 0;
0x014E	0x1283      	BCF        STATUS, 5
0x014F	0x01E1      	CLRF       _reg
;60SecLED.c,75 :: 		led = 0;
0x0150	0x01E5      	CLRF       _led
;60SecLED.c,76 :: 		sec = 0;
0x0151	0x01E6      	CLRF       _sec
;60SecLED.c,77 :: 		freq = 0;
0x0152	0x01E7      	CLRF       _freq
;60SecLED.c,81 :: 		CMCON0 = 0x07;
0x0153	0x3007      	MOVLW      7
0x0154	0x0099      	MOVWF      CMCON0
;60SecLED.c,83 :: 		ANSEL = 0x0;
0x0155	0x1683      	BSF        STATUS, 5
0x0156	0x019F      	CLRF       ANSEL
;60SecLED.c,85 :: 		TRISIO = 0x0C;
0x0157	0x300C      	MOVLW      12
0x0158	0x0085      	MOVWF      TRISIO
;60SecLED.c,88 :: 		INTCON.INTE = 1;
0x0159	0x160B      	BSF        INTCON, 4
;60SecLED.c,90 :: 		OPTION_REG.INTEDG = 0;
0x015A	0x1301      	BCF        OPTION_REG, 6
;60SecLED.c,92 :: 		INTCON.INTF = 0;
0x015B	0x108B      	BCF        INTCON, 1
;60SecLED.c,95 :: 		GPIO = 0x01;
0x015C	0x3001      	MOVLW      1
0x015D	0x1283      	BCF        STATUS, 5
0x015E	0x0085      	MOVWF      GPIO
;60SecLED.c,98 :: 		GPIO.B0 = 0;
0x015F	0x1005      	BCF        GPIO, 0
;60SecLED.c,99 :: 		GPIO.B0 = 1;
0x0160	0x1405      	BSF        GPIO, 0
;60SecLED.c,100 :: 		GPIO.B1 = 1;
0x0161	0x1485      	BSF        GPIO, 1
;60SecLED.c,101 :: 		GPIO.B1 = 0;
0x0162	0x1085      	BCF        GPIO, 1
;60SecLED.c,103 :: 		Delay_ms(10);
0x0163	0x301A      	MOVLW      26
0x0164	0x00FC      	MOVWF      R12
0x0165	0x30F8      	MOVLW      248
0x0166	0x00FD      	MOVWF      R13
L_main12:
0x0167	0x0BFD      	DECFSZ     R13, 1
0x0168	0x2967      	GOTO       L_main12
0x0169	0x0BFC      	DECFSZ     R12, 1
0x016A	0x2967      	GOTO       L_main12
0x016B	0x0000      	NOP
;60SecLED.c,106 :: 		INTCON.GIE = 1;
0x016C	0x178B      	BSF        INTCON, 7
;60SecLED.c,108 :: 		while(1) {
L_main13:
;60SecLED.c,111 :: 		for(i = 0; i < 100; i++) {
0x016D	0x01E4      	CLRF       _i
L_main15:
0x016E	0x3064      	MOVLW      100
0x016F	0x0264      	SUBWF      _i, 0
0x0170	0x1803      	BTFSC      STATUS, 0
0x0171	0x2982      	GOTO       L_main16
;60SecLED.c,113 :: 		for(j = 0; j < 100; j++) {
0x0172	0x01E2      	CLRF       _j
L_main18:
0x0173	0x3064      	MOVLW      100
0x0174	0x0262      	SUBWF      _j, 0
0x0175	0x1803      	BTFSC      STATUS, 0
0x0176	0x2980      	GOTO       L_main19
;60SecLED.c,115 :: 		for(k = 0; k < 100; k++);
0x0177	0x01E3      	CLRF       _k
L_main21:
0x0178	0x3064      	MOVLW      100
0x0179	0x0263      	SUBWF      _k, 0
0x017A	0x1803      	BTFSC      STATUS, 0
0x017B	0x297E      	GOTO       L_main22
0x017C	0x0AE3      	INCF       _k, 1
0x017D	0x2978      	GOTO       L_main21
L_main22:
;60SecLED.c,113 :: 		for(j = 0; j < 100; j++) {
0x017E	0x0AE2      	INCF       _j, 1
;60SecLED.c,117 :: 		}
0x017F	0x2973      	GOTO       L_main18
L_main19:
;60SecLED.c,111 :: 		for(i = 0; i < 100; i++) {
0x0180	0x0AE4      	INCF       _i, 1
;60SecLED.c,119 :: 		}
0x0181	0x296E      	GOTO       L_main15
L_main16:
;60SecLED.c,122 :: 		GPIO.B0 = 0;
0x0182	0x1005      	BCF        GPIO, 0
;60SecLED.c,123 :: 		GPIO.B0 = 1;
0x0183	0x1405      	BSF        GPIO, 0
;60SecLED.c,124 :: 		GPIO.B1 = 1;
0x0184	0x1485      	BSF        GPIO, 1
;60SecLED.c,125 :: 		GPIO.B1 = 0;
0x0185	0x1085      	BCF        GPIO, 1
;60SecLED.c,128 :: 		reg = 0;
0x0186	0x01E1      	CLRF       _reg
;60SecLED.c,129 :: 		led = 0;
0x0187	0x01E5      	CLRF       _led
;60SecLED.c,130 :: 		sec = 0;
0x0188	0x01E6      	CLRF       _sec
;60SecLED.c,131 :: 		freq = 0;
0x0189	0x01E7      	CLRF       _freq
;60SecLED.c,133 :: 		}
0x018A	0x296D      	GOTO       L_main13
;60SecLED.c,136 :: 		}
L_end_main:
0x018B	0x298B      	GOTO       $+0
; end of _main
0x01CE	0x3023      	MOVLW      35
0x01CF	0x0084      	MOVWF      FSR
0x01D0	0x303C      	MOVLW      60
0x01D1	0x1283      	BCF        STATUS, 5
0x01D2	0x00F0      	MOVWF      R0
0x01D3	0x3091      	MOVLW      145
0x01D4	0x00DF      	MOVWF      ___DoICPAddr
0x01D5	0x3001      	MOVLW      1
0x01D6	0x00E0      	MOVWF      96
0x01D7	0x2141      	CALL       321
0x01D8	0x0008      	RETURN
;60SecLED.c,0 :: ?ICS_delays
0x0191	0x34DC ;?ICS_delays+0
0x0192	0x346E ;?ICS_delays+1
0x0193	0x3455 ;?ICS_delays+2
0x0194	0x3440 ;?ICS_delays+3
0x0195	0x3433 ;?ICS_delays+4
0x0196	0x342B ;?ICS_delays+5
0x0197	0x3425 ;?ICS_delays+6
0x0198	0x3420 ;?ICS_delays+7
0x0199	0x341C ;?ICS_delays+8
0x019A	0x3419 ;?ICS_delays+9
0x019B	0x3418 ;?ICS_delays+10
0x019C	0x3415 ;?ICS_delays+11
0x019D	0x3414 ;?ICS_delays+12
0x019E	0x3412 ;?ICS_delays+13
0x019F	0x3411 ;?ICS_delays+14
0x01A0	0x3410 ;?ICS_delays+15
0x01A1	0x340F ;?ICS_delays+16
0x01A2	0x340E ;?ICS_delays+17
0x01A3	0x340D ;?ICS_delays+18
0x01A4	0x340D ;?ICS_delays+19
0x01A5	0x340C ;?ICS_delays+20
0x01A6	0x340B ;?ICS_delays+21
0x01A7	0x340B ;?ICS_delays+22
0x01A8	0x340B ;?ICS_delays+23
0x01A9	0x340A ;?ICS_delays+24
0x01AA	0x340A ;?ICS_delays+25
0x01AB	0x340A ;?ICS_delays+26
0x01AC	0x3409 ;?ICS_delays+27
0x01AD	0x3409 ;?ICS_delays+28
0x01AE	0x3408 ;?ICS_delays+29
0x01AF	0x3408 ;?ICS_delays+30
0x01B0	0x3408 ;?ICS_delays+31
0x01B1	0x3408 ;?ICS_delays+32
0x01B2	0x3408 ;?ICS_delays+33
0x01B3	0x3408 ;?ICS_delays+34
0x01B4	0x3407 ;?ICS_delays+35
0x01B5	0x3407 ;?ICS_delays+36
0x01B6	0x3406 ;?ICS_delays+37
0x01B7	0x3406 ;?ICS_delays+38
0x01B8	0x3406 ;?ICS_delays+39
0x01B9	0x3406 ;?ICS_delays+40
0x01BA	0x3406 ;?ICS_delays+41
0x01BB	0x3406 ;?ICS_delays+42
0x01BC	0x3405 ;?ICS_delays+43
0x01BD	0x3405 ;?ICS_delays+44
0x01BE	0x3405 ;?ICS_delays+45
0x01BF	0x3405 ;?ICS_delays+46
0x01C0	0x3405 ;?ICS_delays+47
0x01C1	0x3405 ;?ICS_delays+48
0x01C2	0x3405 ;?ICS_delays+49
0x01C3	0x3405 ;?ICS_delays+50
0x01C4	0x3405 ;?ICS_delays+51
0x01C5	0x3405 ;?ICS_delays+52
0x01C6	0x3405 ;?ICS_delays+53
0x01C7	0x3405 ;?ICS_delays+54
0x01C8	0x3405 ;?ICS_delays+55
0x01C9	0x3405 ;?ICS_delays+56
0x01CA	0x3405 ;?ICS_delays+57
0x01CB	0x3404 ;?ICS_delays+58
0x01CC	0x3404 ;?ICS_delays+59
; end of ?ICS_delays
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [48]    _interrupt
0x0034      [55]    _Mul_32x32_U
0x006B       [6]    _____DoICP
0x0071     [113]    _VDelay_ms
0x00E2      [95]    _run_led
0x0141      [12]    ___CC2DW
0x014D      [62]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    GPIO
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x0019       [1]    CMCON0
0x0023      [60]    _delays
0x005F       [2]    ___DoICPAddr
0x0061       [1]    _reg
0x0062       [1]    _j
0x0063       [1]    _k
0x0064       [1]    _i
0x0065       [1]    _led
0x0066       [1]    _sec
0x0067       [1]    _freq
0x0068       [1]    ___saveSTATUS
0x0069       [1]    ___savePCLATH
0x006A       [1]    FARG_run_led_s
0x006B       [1]    FARG_run_led_f
0x006C       [2]    FARG_VDelay_ms_Time_ms
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [1]    TRISIO
0x009F       [1]    ANSEL
0x00A0       [4]    VDelay_ms_NumberOfCyc_L0
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0191      [60]    ?ICS_delays
//** Label List: ** 
//----------------------------------------------
  L_run_led0
  L_run_led1
  L_run_led2
  L_run_led3
  L_run_led4
  L_run_led5
  L_run_led6
  L_run_led7
  L_run_led8
  L_run_led9
  L_run_led10
  L_run_led11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_interrupt24
  L_interrupt25
  L_end_run_led
  _run_led
  L__run_led27
  L__run_led28
  L_end_main
  _main
  L_end_interrupt
  _interrupt
  L__interrupt31
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_run_led0
  L_run_led1
  L_run_led2
  L_run_led3
  L_run_led4
  L_run_led5
  L_run_led6
  L_run_led7
  L_run_led8
  L_run_led9
  L_run_led10
  L_run_led11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_interrupt24
  L_interrupt25
  L_end_run_led
  _run_led
  L__run_led27
  L__run_led28
  L_end_main
  _main
  L_end_interrupt
  _interrupt
  L__interrupt31
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_1ms6
  L_Delay_5ms7
  L_Delay_8ms8
  L_Delay_10ms9
  L_Delay_100ms10
  L_Delay_1sec11
  L_boot16_Delay_5ms12
  L_Delay_Cyc13
  L_Delay_Cyc14
  L_VDelay_ms15
  L_VDelay_ms16
  L_VDelay_ms17
  L_VDelay_Advanced_ms18
  L_VDelay_Advanced_ms19
  L_VDelay_Advanced_ms20
  L_end_Get_Fosc_kHz
  _Get_Fosc_kHz
  L_end_Delay_1us
  _Delay_1us
  L_end_Delay_10us
  _Delay_10us
  L_end_Delay_22us
  _Delay_22us
  L_end_Delay_50us
  _Delay_50us
  L_end_Delay_80us
  _Delay_80us
  L_end_Delay_500us
  _Delay_500us
  L_end_Delay_5500us
  _Delay_5500us
  L_end_Delay_1ms
  _Delay_1ms
  L_end_Delay_5ms
  _Delay_5ms
  L_end_Delay_8ms
  _Delay_8ms
  L_end_Delay_10ms
  _Delay_10ms
  L_end_Delay_100ms
  _Delay_100ms
  L_end_Delay_1sec
  _Delay_1sec
  L_end_boot16_Delay_5ms
  _boot16_Delay_5ms
  L_end_Delay_Cyc
  _Delay_Cyc
  L_end_VDelay_ms
  _VDelay_ms
  L__VDelay_ms38
  L__VDelay_ms39
  L__VDelay_ms40
  L_end_VDelay_Advanced_ms
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms42
  L__VDelay_Advanced_ms43
  L__VDelay_Advanced_ms44
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Mul_8x8_U
  _Mul_8x8_U
  L_end_Mul_16x16_U
  _Mul_16x16_U
  L_end_Div_8x8_U
  _Div_8x8_U
  L_end_Div_16x16_U
  _Div_16x16_U
  L_end_Mul_8x8_S
  _Mul_8x8_S
  L_end_Mul_16x16_S
  _Mul_16x16_S
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8x8_S
  _Div_8x8_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
