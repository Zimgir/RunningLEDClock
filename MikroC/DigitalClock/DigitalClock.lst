;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 28/09/2015 16:19:39
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2D67      	GOTO       1383
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00AA      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00AB      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A0      	MOVWF      32
;DigitalClock.c,455 :: 		void interrupt(void) {
;DigitalClock.c,459 :: 		dummy_bit = PORTA.RA1;
0x000D	0x1885      	BTFSC      PORTA, 1
0x000E	0x2811      	GOTO       L__interrupt109
0x000F	0x1124      	BCF        _dummy_bit, BitPos(_dummy_bit+0)
0x0010	0x2812      	GOTO       L__interrupt110
L__interrupt109:
0x0011	0x1524      	BSF        _dummy_bit, BitPos(_dummy_bit+0)
L__interrupt110:
;DigitalClock.c,461 :: 		if (INTCON.INTF) {
0x0012	0x1C8B      	BTFSS      INTCON, 1
0x0013	0x2824      	GOTO       L_interrupt92
;DigitalClock.c,464 :: 		if (!digit_select) {
0x0014	0x0827      	MOVF       _digit_select, 0
0x0015	0x1D03      	BTFSS      STATUS, 2
0x0016	0x2822      	GOTO       L_interrupt93
;DigitalClock.c,466 :: 		time_select++;
0x0017	0x0A28      	INCF       _time_select, 0
0x0018	0x00F0      	MOVWF      R0
0x0019	0x0870      	MOVF       R0, 0
0x001A	0x00A8      	MOVWF      _time_select
;DigitalClock.c,468 :: 		if (time_select == 5)
0x001B	0x0828      	MOVF       _time_select, 0
0x001C	0x3A05      	XORLW      5
0x001D	0x1D03      	BTFSS      STATUS, 2
0x001E	0x2821      	GOTO       L_interrupt94
;DigitalClock.c,469 :: 		time_select = 1;
0x001F	0x3001      	MOVLW      1
0x0020	0x00A8      	MOVWF      _time_select
L_interrupt94:
;DigitalClock.c,470 :: 		}
0x0021	0x2823      	GOTO       L_interrupt95
L_interrupt93:
;DigitalClock.c,474 :: 		increment_flag = 1;
0x0022	0x1424      	BSF        _increment_flag, BitPos(_increment_flag+0)
;DigitalClock.c,475 :: 		}
L_interrupt95:
;DigitalClock.c,477 :: 		}
0x0023	0x2833      	GOTO       L_interrupt96
L_interrupt92:
;DigitalClock.c,479 :: 		else if (INTCON.RABIF && time_select == 2) {
0x0024	0x1C0B      	BTFSS      INTCON, 0
0x0025	0x2833      	GOTO       L_interrupt99
0x0026	0x0828      	MOVF       _time_select, 0
0x0027	0x3A02      	XORLW      2
0x0028	0x1D03      	BTFSS      STATUS, 2
0x0029	0x2833      	GOTO       L_interrupt99
L__interrupt101:
;DigitalClock.c,482 :: 		digit_select++;
0x002A	0x0A27      	INCF       _digit_select, 0
0x002B	0x00F0      	MOVWF      R0
0x002C	0x0870      	MOVF       R0, 0
0x002D	0x00A7      	MOVWF      _digit_select
;DigitalClock.c,484 :: 		if (digit_select == 5)
0x002E	0x0827      	MOVF       _digit_select, 0
0x002F	0x3A05      	XORLW      5
0x0030	0x1D03      	BTFSS      STATUS, 2
0x0031	0x2833      	GOTO       L_interrupt100
;DigitalClock.c,485 :: 		digit_select = 0;
0x0032	0x01A7      	CLRF       _digit_select
L_interrupt100:
;DigitalClock.c,487 :: 		}
L_interrupt99:
L_interrupt96:
;DigitalClock.c,491 :: 		INTCON = 0x00;
0x0033	0x018B      	CLRF       INTCON
;DigitalClock.c,494 :: 		delay_flag = 1;
0x0034	0x14A4      	BSF        _delay_flag, BitPos(_delay_flag+0)
;DigitalClock.c,495 :: 		}
L_end_interrupt:
L__interrupt108:
0x0035	0x0820      	MOVF       32, 0
0x0036	0x00F0      	MOVWF      R0
0x0037	0x082B      	MOVF       ___savePCLATH, 0
0x0038	0x008A      	MOVWF      PCLATH
0x0039	0x0E2A      	SWAPF      ___saveSTATUS, 0
0x003A	0x0083      	MOVWF      STATUS
0x003B	0x0EFF      	SWAPF      R15, 1
0x003C	0x0E7F      	SWAPF      R15, 0
0x003D	0x0009      	RETFIE
; end of _interrupt
_bcd_to_seg:
;DigitalClock.c,14 :: 		unsigned char bcd_to_seg(unsigned char bcd) {
;DigitalClock.c,16 :: 		switch (bcd) {
0x003E	0x2871      	GOTO       L_bcd_to_seg0
;DigitalClock.c,18 :: 		case 0: {
L_bcd_to_seg2:
;DigitalClock.c,19 :: 		return 0x03;
0x003F	0x3003      	MOVLW      3
0x0040	0x1283      	BCF        STATUS, 5
0x0041	0x1303      	BCF        STATUS, 6
0x0042	0x00F0      	MOVWF      R0
0x0043	0x28B0      	GOTO       L_end_bcd_to_seg
;DigitalClock.c,21 :: 		case 1: {
L_bcd_to_seg3:
;DigitalClock.c,22 :: 		return 0x9F;
0x0044	0x309F      	MOVLW      159
0x0045	0x00F0      	MOVWF      R0
0x0046	0x28B0      	GOTO       L_end_bcd_to_seg
;DigitalClock.c,24 :: 		case 2: {
L_bcd_to_seg4:
;DigitalClock.c,25 :: 		return 0x25;
0x0047	0x3025      	MOVLW      37
0x0048	0x00F0      	MOVWF      R0
0x0049	0x28B0      	GOTO       L_end_bcd_to_seg
;DigitalClock.c,27 :: 		case 3: {
L_bcd_to_seg5:
;DigitalClock.c,28 :: 		return 0x0D;
0x004A	0x300D      	MOVLW      13
0x004B	0x00F0      	MOVWF      R0
0x004C	0x28B0      	GOTO       L_end_bcd_to_seg
;DigitalClock.c,30 :: 		case 4: {
L_bcd_to_seg6:
;DigitalClock.c,31 :: 		return 0x99;
0x004D	0x3099      	MOVLW      153
0x004E	0x00F0      	MOVWF      R0
0x004F	0x28B0      	GOTO       L_end_bcd_to_seg
;DigitalClock.c,33 :: 		case 5: {
L_bcd_to_seg7:
;DigitalClock.c,34 :: 		return 0x49;
0x0050	0x3049      	MOVLW      73
0x0051	0x00F0      	MOVWF      R0
0x0052	0x28B0      	GOTO       L_end_bcd_to_seg
;DigitalClock.c,36 :: 		case 6: {
L_bcd_to_seg8:
;DigitalClock.c,37 :: 		return 0x41;
0x0053	0x3041      	MOVLW      65
0x0054	0x00F0      	MOVWF      R0
0x0055	0x28B0      	GOTO       L_end_bcd_to_seg
;DigitalClock.c,39 :: 		case 7: {
L_bcd_to_seg9:
;DigitalClock.c,40 :: 		return 0x1F;
0x0056	0x301F      	MOVLW      31
0x0057	0x00F0      	MOVWF      R0
0x0058	0x28B0      	GOTO       L_end_bcd_to_seg
;DigitalClock.c,42 :: 		case 8: {
L_bcd_to_seg10:
;DigitalClock.c,43 :: 		return 0x01;
0x0059	0x3001      	MOVLW      1
0x005A	0x00F0      	MOVWF      R0
0x005B	0x28B0      	GOTO       L_end_bcd_to_seg
;DigitalClock.c,45 :: 		case 9: {
L_bcd_to_seg11:
;DigitalClock.c,46 :: 		return 0x09;
0x005C	0x3009      	MOVLW      9
0x005D	0x00F0      	MOVWF      R0
0x005E	0x28B0      	GOTO       L_end_bcd_to_seg
;DigitalClock.c,48 :: 		case 'A': {
L_bcd_to_seg12:
;DigitalClock.c,49 :: 		return 0x11;
0x005F	0x3011      	MOVLW      17
0x0060	0x00F0      	MOVWF      R0
0x0061	0x28B0      	GOTO       L_end_bcd_to_seg
;DigitalClock.c,51 :: 		case 'L': {
L_bcd_to_seg13:
;DigitalClock.c,52 :: 		return 0xE3;
0x0062	0x30E3      	MOVLW      227
0x0063	0x00F0      	MOVWF      R0
0x0064	0x28B0      	GOTO       L_end_bcd_to_seg
;DigitalClock.c,54 :: 		case 'E': {
L_bcd_to_seg14:
;DigitalClock.c,55 :: 		return 0x61;
0x0065	0x3061      	MOVLW      97
0x0066	0x00F0      	MOVWF      R0
0x0067	0x28B0      	GOTO       L_end_bcd_to_seg
;DigitalClock.c,57 :: 		case 'X': {
L_bcd_to_seg15:
;DigitalClock.c,58 :: 		return 0x91;
0x0068	0x3091      	MOVLW      145
0x0069	0x00F0      	MOVWF      R0
0x006A	0x28B0      	GOTO       L_end_bcd_to_seg
;DigitalClock.c,60 :: 		case 'C': {
L_bcd_to_seg16:
;DigitalClock.c,61 :: 		return 0x63;
0x006B	0x3063      	MOVLW      99
0x006C	0x00F0      	MOVWF      R0
0x006D	0x28B0      	GOTO       L_end_bcd_to_seg
;DigitalClock.c,63 :: 		default: {
L_bcd_to_seg17:
;DigitalClock.c,64 :: 		return 0xFD;
0x006E	0x30FD      	MOVLW      253
0x006F	0x00F0      	MOVWF      R0
0x0070	0x28B0      	GOTO       L_end_bcd_to_seg
;DigitalClock.c,66 :: 		}
L_bcd_to_seg0:
0x0071	0x1283      	BCF        STATUS, 5
0x0072	0x1303      	BCF        STATUS, 6
0x0073	0x0834      	MOVF       FARG_bcd_to_seg_bcd, 0
0x0074	0x3A00      	XORLW      0
0x0075	0x1903      	BTFSC      STATUS, 2
0x0076	0x283F      	GOTO       L_bcd_to_seg2
0x0077	0x0834      	MOVF       FARG_bcd_to_seg_bcd, 0
0x0078	0x3A01      	XORLW      1
0x0079	0x1903      	BTFSC      STATUS, 2
0x007A	0x2844      	GOTO       L_bcd_to_seg3
0x007B	0x0834      	MOVF       FARG_bcd_to_seg_bcd, 0
0x007C	0x3A02      	XORLW      2
0x007D	0x1903      	BTFSC      STATUS, 2
0x007E	0x2847      	GOTO       L_bcd_to_seg4
0x007F	0x0834      	MOVF       FARG_bcd_to_seg_bcd, 0
0x0080	0x3A03      	XORLW      3
0x0081	0x1903      	BTFSC      STATUS, 2
0x0082	0x284A      	GOTO       L_bcd_to_seg5
0x0083	0x0834      	MOVF       FARG_bcd_to_seg_bcd, 0
0x0084	0x3A04      	XORLW      4
0x0085	0x1903      	BTFSC      STATUS, 2
0x0086	0x284D      	GOTO       L_bcd_to_seg6
0x0087	0x0834      	MOVF       FARG_bcd_to_seg_bcd, 0
0x0088	0x3A05      	XORLW      5
0x0089	0x1903      	BTFSC      STATUS, 2
0x008A	0x2850      	GOTO       L_bcd_to_seg7
0x008B	0x0834      	MOVF       FARG_bcd_to_seg_bcd, 0
0x008C	0x3A06      	XORLW      6
0x008D	0x1903      	BTFSC      STATUS, 2
0x008E	0x2853      	GOTO       L_bcd_to_seg8
0x008F	0x0834      	MOVF       FARG_bcd_to_seg_bcd, 0
0x0090	0x3A07      	XORLW      7
0x0091	0x1903      	BTFSC      STATUS, 2
0x0092	0x2856      	GOTO       L_bcd_to_seg9
0x0093	0x0834      	MOVF       FARG_bcd_to_seg_bcd, 0
0x0094	0x3A08      	XORLW      8
0x0095	0x1903      	BTFSC      STATUS, 2
0x0096	0x2859      	GOTO       L_bcd_to_seg10
0x0097	0x0834      	MOVF       FARG_bcd_to_seg_bcd, 0
0x0098	0x3A09      	XORLW      9
0x0099	0x1903      	BTFSC      STATUS, 2
0x009A	0x285C      	GOTO       L_bcd_to_seg11
0x009B	0x0834      	MOVF       FARG_bcd_to_seg_bcd, 0
0x009C	0x3A41      	XORLW      65
0x009D	0x1903      	BTFSC      STATUS, 2
0x009E	0x285F      	GOTO       L_bcd_to_seg12
0x009F	0x0834      	MOVF       FARG_bcd_to_seg_bcd, 0
0x00A0	0x3A4C      	XORLW      76
0x00A1	0x1903      	BTFSC      STATUS, 2
0x00A2	0x2862      	GOTO       L_bcd_to_seg13
0x00A3	0x0834      	MOVF       FARG_bcd_to_seg_bcd, 0
0x00A4	0x3A45      	XORLW      69
0x00A5	0x1903      	BTFSC      STATUS, 2
0x00A6	0x2865      	GOTO       L_bcd_to_seg14
0x00A7	0x0834      	MOVF       FARG_bcd_to_seg_bcd, 0
0x00A8	0x3A58      	XORLW      88
0x00A9	0x1903      	BTFSC      STATUS, 2
0x00AA	0x2868      	GOTO       L_bcd_to_seg15
0x00AB	0x0834      	MOVF       FARG_bcd_to_seg_bcd, 0
0x00AC	0x3A43      	XORLW      67
0x00AD	0x1903      	BTFSC      STATUS, 2
0x00AE	0x286B      	GOTO       L_bcd_to_seg16
0x00AF	0x286E      	GOTO       L_bcd_to_seg17
;DigitalClock.c,67 :: 		}
L_end_bcd_to_seg:
0x00B0	0x0008      	RETURN
; end of _bcd_to_seg
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x00B1	0x0000      	NOP
0x00B2	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x00B3	0x0008      	RETURN
; end of _Delay_1us
__Lib_SoftI2C_PutZerosToLATSda:
;__Lib_SoftI2C.c,28 :: 		
;__Lib_SoftI2C.c,36 :: 		
0x00B4	0x3005      	MOVLW      Soft_I2C_Sda
;__Lib_SoftI2C.c,37 :: 		
0x00B5	0x0084      	MOVWF      FSR
;__Lib_SoftI2C.c,38 :: 		
0x00B6	0x0800      	MOVF       INDF, 0
;__Lib_SoftI2C.c,39 :: 		
0x00B7	0x0800      	MOVF       INDF, 0
0x00B8	0x1283      	BCF        STATUS, 5
0x00B9	0x1303      	BCF        STATUS, 6
0x00BA	0x00F0      	MOVWF      R0
;__Lib_SoftI2C.c,41 :: 		
0x00BB	0x1270      	BCF        R0, BitPos(Soft_I2C_Sda+0)
;__Lib_SoftI2C.c,43 :: 		
0x00BC	0x0870      	MOVF       R0, 0
0x00BD	0x0080      	MOVWF      INDF
;__Lib_SoftI2C.c,44 :: 		
L_end_PutZerosToLATSda:
0x00BE	0x0008      	RETURN
; end of __Lib_SoftI2C_PutZerosToLATSda
__Lib_SoftI2C_PutZerosToLATScl:
;__Lib_SoftI2C.c,45 :: 		
;__Lib_SoftI2C.c,53 :: 		
0x00BF	0x3005      	MOVLW      Soft_I2C_Scl
;__Lib_SoftI2C.c,54 :: 		
0x00C0	0x0084      	MOVWF      FSR
;__Lib_SoftI2C.c,55 :: 		
0x00C1	0x0800      	MOVF       INDF, 0
;__Lib_SoftI2C.c,56 :: 		
0x00C2	0x0800      	MOVF       INDF, 0
0x00C3	0x1283      	BCF        STATUS, 5
0x00C4	0x1303      	BCF        STATUS, 6
0x00C5	0x00F0      	MOVWF      R0
;__Lib_SoftI2C.c,59 :: 		
0x00C6	0x12F0      	BCF        R0, BitPos(Soft_I2C_Scl+0)
;__Lib_SoftI2C.c,61 :: 		
0x00C7	0x0870      	MOVF       R0, 0
0x00C8	0x0080      	MOVWF      INDF
;__Lib_SoftI2C.c,62 :: 		
L_end_PutZerosToLATScl:
0x00C9	0x0008      	RETURN
; end of __Lib_SoftI2C_PutZerosToLATScl
_Soft_I2C_Start:
;__Lib_SoftI2C.c,147 :: 		
;__Lib_SoftI2C.c,148 :: 		
0x00CA	0x1683      	BSF        STATUS, 5
0x00CB	0x1303      	BCF        STATUS, 6
0x00CC	0x1605      	BSF        Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0)
;__Lib_SoftI2C.c,150 :: 		
0x00CD	0x20B1      	CALL       _Delay_1us
0x00CE	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,152 :: 		
0x00CF	0x1685      	BSF        Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0)
;__Lib_SoftI2C.c,154 :: 		
0x00D0	0x20B1      	CALL       _Delay_1us
0x00D1	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,156 :: 		
0x00D2	0x20B4      	CALL       __Lib_SoftI2C_PutZerosToLATSda
;__Lib_SoftI2C.c,157 :: 		
0x00D3	0x1683      	BSF        STATUS, 5
0x00D4	0x1205      	BCF        Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0)
;__Lib_SoftI2C.c,159 :: 		
0x00D5	0x20B1      	CALL       _Delay_1us
0x00D6	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,161 :: 		
0x00D7	0x20BF      	CALL       __Lib_SoftI2C_PutZerosToLATScl
;__Lib_SoftI2C.c,162 :: 		
0x00D8	0x1683      	BSF        STATUS, 5
0x00D9	0x1285      	BCF        Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0)
;__Lib_SoftI2C.c,165 :: 		
L_end_Soft_I2C_Start:
0x00DA	0x0008      	RETURN
; end of _Soft_I2C_Start
_flash_seg:
;DigitalClock.c,69 :: 		void flash_seg(unsigned char select) {
;DigitalClock.c,71 :: 		switch (select) {
0x00DB	0x2AAD      	GOTO       L_flash_seg18
;DigitalClock.c,74 :: 		case 1: {
L_flash_seg20:
;DigitalClock.c,76 :: 		PORTB = 0xEF;
0x00DC	0x30EF      	MOVLW      239
0x00DD	0x1283      	BCF        STATUS, 5
0x00DE	0x1303      	BCF        STATUS, 6
0x00DF	0x0086      	MOVWF      PORTB
;DigitalClock.c,77 :: 		PORTC = bcd_to_seg(sec & 0x0F);
0x00E0	0x300F      	MOVLW      15
0x00E1	0x0521      	ANDWF      _sec, 0
0x00E2	0x00B4      	MOVWF      FARG_bcd_to_seg_bcd
0x00E3	0x203E      	CALL       _bcd_to_seg
0x00E4	0x1283      	BCF        STATUS, 5
0x00E5	0x1303      	BCF        STATUS, 6
0x00E6	0x0870      	MOVF       R0, 0
0x00E7	0x0087      	MOVWF      PORTC
;DigitalClock.c,78 :: 		Delay_us(15);
0x00E8	0x3009      	MOVLW      9
0x00E9	0x00FD      	MOVWF      R13
L_flash_seg21:
0x00EA	0x0BFD      	DECFSZ     R13, 1
0x00EB	0x28EA      	GOTO       L_flash_seg21
0x00EC	0x0000      	NOP
0x00ED	0x0000      	NOP
;DigitalClock.c,79 :: 		PORTC = 0xFF;
0x00EE	0x30FF      	MOVLW      255
0x00EF	0x0087      	MOVWF      PORTC
;DigitalClock.c,80 :: 		PORTB = 0xDF;
0x00F0	0x30DF      	MOVLW      223
0x00F1	0x0086      	MOVWF      PORTB
;DigitalClock.c,81 :: 		PORTC = bcd_to_seg(sec >> 4);
0x00F2	0x0821      	MOVF       _sec, 0
0x00F3	0x00B4      	MOVWF      FARG_bcd_to_seg_bcd
0x00F4	0x0CB4      	RRF        FARG_bcd_to_seg_bcd, 1
0x00F5	0x13B4      	BCF        FARG_bcd_to_seg_bcd, 7
0x00F6	0x0CB4      	RRF        FARG_bcd_to_seg_bcd, 1
0x00F7	0x13B4      	BCF        FARG_bcd_to_seg_bcd, 7
0x00F8	0x0CB4      	RRF        FARG_bcd_to_seg_bcd, 1
0x00F9	0x13B4      	BCF        FARG_bcd_to_seg_bcd, 7
0x00FA	0x0CB4      	RRF        FARG_bcd_to_seg_bcd, 1
0x00FB	0x13B4      	BCF        FARG_bcd_to_seg_bcd, 7
0x00FC	0x203E      	CALL       _bcd_to_seg
0x00FD	0x1283      	BCF        STATUS, 5
0x00FE	0x1303      	BCF        STATUS, 6
0x00FF	0x0870      	MOVF       R0, 0
0x0100	0x0087      	MOVWF      PORTC
;DigitalClock.c,82 :: 		Delay_us(15);
0x0101	0x3009      	MOVLW      9
0x0102	0x00FD      	MOVWF      R13
L_flash_seg22:
0x0103	0x0BFD      	DECFSZ     R13, 1
0x0104	0x2903      	GOTO       L_flash_seg22
0x0105	0x0000      	NOP
0x0106	0x0000      	NOP
;DigitalClock.c,83 :: 		PORTC = 0xFF;
0x0107	0x30FF      	MOVLW      255
0x0108	0x0087      	MOVWF      PORTC
;DigitalClock.c,84 :: 		PORTB = 0xBF;
0x0109	0x30BF      	MOVLW      191
0x010A	0x0086      	MOVWF      PORTB
;DigitalClock.c,85 :: 		PORTC = bcd_to_seg(0xFF);
0x010B	0x30FF      	MOVLW      255
0x010C	0x00B4      	MOVWF      FARG_bcd_to_seg_bcd
0x010D	0x203E      	CALL       _bcd_to_seg
0x010E	0x1283      	BCF        STATUS, 5
0x010F	0x1303      	BCF        STATUS, 6
0x0110	0x0870      	MOVF       R0, 0
0x0111	0x0087      	MOVWF      PORTC
;DigitalClock.c,86 :: 		Delay_us(15);
0x0112	0x3009      	MOVLW      9
0x0113	0x00FD      	MOVWF      R13
L_flash_seg23:
0x0114	0x0BFD      	DECFSZ     R13, 1
0x0115	0x2914      	GOTO       L_flash_seg23
0x0116	0x0000      	NOP
0x0117	0x0000      	NOP
;DigitalClock.c,87 :: 		PORTC = 0xFF;
0x0118	0x30FF      	MOVLW      255
0x0119	0x0087      	MOVWF      PORTC
;DigitalClock.c,88 :: 		PORTB = 0x7F;
0x011A	0x307F      	MOVLW      127
0x011B	0x0086      	MOVWF      PORTB
;DigitalClock.c,89 :: 		PORTC = bcd_to_seg(0xFF);
0x011C	0x30FF      	MOVLW      255
0x011D	0x00B4      	MOVWF      FARG_bcd_to_seg_bcd
0x011E	0x203E      	CALL       _bcd_to_seg
0x011F	0x1283      	BCF        STATUS, 5
0x0120	0x1303      	BCF        STATUS, 6
0x0121	0x0870      	MOVF       R0, 0
0x0122	0x0087      	MOVWF      PORTC
;DigitalClock.c,90 :: 		Delay_us(15);
0x0123	0x3009      	MOVLW      9
0x0124	0x00FD      	MOVWF      R13
L_flash_seg24:
0x0125	0x0BFD      	DECFSZ     R13, 1
0x0126	0x2925      	GOTO       L_flash_seg24
0x0127	0x0000      	NOP
0x0128	0x0000      	NOP
;DigitalClock.c,91 :: 		PORTC = 0xFF;
0x0129	0x30FF      	MOVLW      255
0x012A	0x0087      	MOVWF      PORTC
;DigitalClock.c,92 :: 		PORTB = 0xFF;
0x012B	0x30FF      	MOVLW      255
0x012C	0x0086      	MOVWF      PORTB
;DigitalClock.c,94 :: 		break;
0x012D	0x2AC0      	GOTO       L_flash_seg19
;DigitalClock.c,98 :: 		case 2: {
L_flash_seg25:
;DigitalClock.c,100 :: 		PORTB = 0xEF;
0x012E	0x30EF      	MOVLW      239
0x012F	0x0086      	MOVWF      PORTB
;DigitalClock.c,101 :: 		PORTC = (digit_select == 1) ?
0x0130	0x0827      	MOVF       _digit_select, 0
0x0131	0x3A01      	XORLW      1
0x0132	0x1D03      	BTFSS      STATUS, 2
0x0133	0x293F      	GOTO       L_flash_seg26
;DigitalClock.c,102 :: 		bcd_to_seg(minutes & 0x0F) & 0xFE : bcd_to_seg(minutes & 0x0F);
0x0134	0x300F      	MOVLW      15
0x0135	0x0526      	ANDWF      _minutes, 0
0x0136	0x00B4      	MOVWF      FARG_bcd_to_seg_bcd
0x0137	0x203E      	CALL       _bcd_to_seg
0x0138	0x30FE      	MOVLW      254
0x0139	0x1283      	BCF        STATUS, 5
0x013A	0x1303      	BCF        STATUS, 6
0x013B	0x05F0      	ANDWF      R0, 1
0x013C	0x0870      	MOVF       R0, 0
0x013D	0x00AF      	MOVWF      FLOC__flash_seg
0x013E	0x2947      	GOTO       L_flash_seg27
L_flash_seg26:
0x013F	0x300F      	MOVLW      15
0x0140	0x0526      	ANDWF      _minutes, 0
0x0141	0x00B4      	MOVWF      FARG_bcd_to_seg_bcd
0x0142	0x203E      	CALL       _bcd_to_seg
0x0143	0x1283      	BCF        STATUS, 5
0x0144	0x1303      	BCF        STATUS, 6
0x0145	0x0870      	MOVF       R0, 0
0x0146	0x00AF      	MOVWF      FLOC__flash_seg
L_flash_seg27:
0x0147	0x082F      	MOVF       FLOC__flash_seg, 0
0x0148	0x0087      	MOVWF      PORTC
;DigitalClock.c,103 :: 		Delay_us(15);
0x0149	0x3009      	MOVLW      9
0x014A	0x00FD      	MOVWF      R13
L_flash_seg28:
0x014B	0x0BFD      	DECFSZ     R13, 1
0x014C	0x294B      	GOTO       L_flash_seg28
0x014D	0x0000      	NOP
0x014E	0x0000      	NOP
;DigitalClock.c,104 :: 		PORTC = 0xFF;
0x014F	0x30FF      	MOVLW      255
0x0150	0x0087      	MOVWF      PORTC
;DigitalClock.c,105 :: 		PORTB = 0xDF;
0x0151	0x30DF      	MOVLW      223
0x0152	0x0086      	MOVWF      PORTB
;DigitalClock.c,106 :: 		PORTC = (digit_select == 2) ?
0x0153	0x0827      	MOVF       _digit_select, 0
0x0154	0x3A02      	XORLW      2
0x0155	0x1D03      	BTFSS      STATUS, 2
0x0156	0x2969      	GOTO       L_flash_seg29
;DigitalClock.c,107 :: 		bcd_to_seg(minutes >> 4) & 0xFE : bcd_to_seg(minutes >> 4);
0x0157	0x0826      	MOVF       _minutes, 0
0x0158	0x00B4      	MOVWF      FARG_bcd_to_seg_bcd
0x0159	0x0CB4      	RRF        FARG_bcd_to_seg_bcd, 1
0x015A	0x13B4      	BCF        FARG_bcd_to_seg_bcd, 7
0x015B	0x0CB4      	RRF        FARG_bcd_to_seg_bcd, 1
0x015C	0x13B4      	BCF        FARG_bcd_to_seg_bcd, 7
0x015D	0x0CB4      	RRF        FARG_bcd_to_seg_bcd, 1
0x015E	0x13B4      	BCF        FARG_bcd_to_seg_bcd, 7
0x015F	0x0CB4      	RRF        FARG_bcd_to_seg_bcd, 1
0x0160	0x13B4      	BCF        FARG_bcd_to_seg_bcd, 7
0x0161	0x203E      	CALL       _bcd_to_seg
0x0162	0x30FE      	MOVLW      254
0x0163	0x1283      	BCF        STATUS, 5
0x0164	0x1303      	BCF        STATUS, 6
0x0165	0x05F0      	ANDWF      R0, 1
0x0166	0x0870      	MOVF       R0, 0
0x0167	0x00AF      	MOVWF      FLOC__flash_seg
0x0168	0x2978      	GOTO       L_flash_seg30
L_flash_seg29:
0x0169	0x0826      	MOVF       _minutes, 0
0x016A	0x00B4      	MOVWF      FARG_bcd_to_seg_bcd
0x016B	0x0CB4      	RRF        FARG_bcd_to_seg_bcd, 1
0x016C	0x13B4      	BCF        FARG_bcd_to_seg_bcd, 7
0x016D	0x0CB4      	RRF        FARG_bcd_to_seg_bcd, 1
0x016E	0x13B4      	BCF        FARG_bcd_to_seg_bcd, 7
0x016F	0x0CB4      	RRF        FARG_bcd_to_seg_bcd, 1
0x0170	0x13B4      	BCF        FARG_bcd_to_seg_bcd, 7
0x0171	0x0CB4      	RRF        FARG_bcd_to_seg_bcd, 1
0x0172	0x13B4      	BCF        FARG_bcd_to_seg_bcd, 7
0x0173	0x203E      	CALL       _bcd_to_seg
0x0174	0x1283      	BCF        STATUS, 5
0x0175	0x1303      	BCF        STATUS, 6
0x0176	0x0870      	MOVF       R0, 0
0x0177	0x00AF      	MOVWF      FLOC__flash_seg
L_flash_seg30:
0x0178	0x082F      	MOVF       FLOC__flash_seg, 0
0x0179	0x0087      	MOVWF      PORTC
;DigitalClock.c,108 :: 		Delay_us(15);
0x017A	0x3009      	MOVLW      9
0x017B	0x00FD      	MOVWF      R13
L_flash_seg31:
0x017C	0x0BFD      	DECFSZ     R13, 1
0x017D	0x297C      	GOTO       L_flash_seg31
0x017E	0x0000      	NOP
0x017F	0x0000      	NOP
;DigitalClock.c,109 :: 		PORTC = 0xFF;
0x0180	0x30FF      	MOVLW      255
0x0181	0x0087      	MOVWF      PORTC
;DigitalClock.c,110 :: 		PORTB = 0xBF;
0x0182	0x30BF      	MOVLW      191
0x0183	0x0086      	MOVWF      PORTB
;DigitalClock.c,111 :: 		PORTC = (digit_select == 3) ?
0x0184	0x0827      	MOVF       _digit_select, 0
0x0185	0x3A03      	XORLW      3
0x0186	0x1D03      	BTFSS      STATUS, 2
0x0187	0x2993      	GOTO       L_flash_seg32
;DigitalClock.c,112 :: 		bcd_to_seg(hours & 0x0F) & 0xFE : bcd_to_seg(hours & 0x0F);
0x0188	0x300F      	MOVLW      15
0x0189	0x0529      	ANDWF      _hours, 0
0x018A	0x00B4      	MOVWF      FARG_bcd_to_seg_bcd
0x018B	0x203E      	CALL       _bcd_to_seg
0x018C	0x30FE      	MOVLW      254
0x018D	0x1283      	BCF        STATUS, 5
0x018E	0x1303      	BCF        STATUS, 6
0x018F	0x05F0      	ANDWF      R0, 1
0x0190	0x0870      	MOVF       R0, 0
0x0191	0x00AF      	MOVWF      FLOC__flash_seg
0x0192	0x299B      	GOTO       L_flash_seg33
L_flash_seg32:
0x0193	0x300F      	MOVLW      15
0x0194	0x0529      	ANDWF      _hours, 0
0x0195	0x00B4      	MOVWF      FARG_bcd_to_seg_bcd
0x0196	0x203E      	CALL       _bcd_to_seg
0x0197	0x1283      	BCF        STATUS, 5
0x0198	0x1303      	BCF        STATUS, 6
0x0199	0x0870      	MOVF       R0, 0
0x019A	0x00AF      	MOVWF      FLOC__flash_seg
L_flash_seg33:
0x019B	0x082F      	MOVF       FLOC__flash_seg, 0
0x019C	0x0087      	MOVWF      PORTC
;DigitalClock.c,113 :: 		Delay_us(15);
0x019D	0x3009      	MOVLW      9
0x019E	0x00FD      	MOVWF      R13
L_flash_seg34:
0x019F	0x0BFD      	DECFSZ     R13, 1
0x01A0	0x299F      	GOTO       L_flash_seg34
0x01A1	0x0000      	NOP
0x01A2	0x0000      	NOP
;DigitalClock.c,114 :: 		PORTC = 0xFF;
0x01A3	0x30FF      	MOVLW      255
0x01A4	0x0087      	MOVWF      PORTC
;DigitalClock.c,115 :: 		PORTB = 0x7F;
0x01A5	0x307F      	MOVLW      127
0x01A6	0x0086      	MOVWF      PORTB
;DigitalClock.c,116 :: 		PORTC = (digit_select == 4) ?
0x01A7	0x0827      	MOVF       _digit_select, 0
0x01A8	0x3A04      	XORLW      4
0x01A9	0x1D03      	BTFSS      STATUS, 2
0x01AA	0x29BD      	GOTO       L_flash_seg35
;DigitalClock.c,117 :: 		bcd_to_seg(hours >> 4) & 0xFE : bcd_to_seg(hours >> 4);
0x01AB	0x0829      	MOVF       _hours, 0
0x01AC	0x00B4      	MOVWF      FARG_bcd_to_seg_bcd
0x01AD	0x0CB4      	RRF        FARG_bcd_to_seg_bcd, 1
0x01AE	0x13B4      	BCF        FARG_bcd_to_seg_bcd, 7
0x01AF	0x0CB4      	RRF        FARG_bcd_to_seg_bcd, 1
0x01B0	0x13B4      	BCF        FARG_bcd_to_seg_bcd, 7
0x01B1	0x0CB4      	RRF        FARG_bcd_to_seg_bcd, 1
0x01B2	0x13B4      	BCF        FARG_bcd_to_seg_bcd, 7
0x01B3	0x0CB4      	RRF        FARG_bcd_to_seg_bcd, 1
0x01B4	0x13B4      	BCF        FARG_bcd_to_seg_bcd, 7
0x01B5	0x203E      	CALL       _bcd_to_seg
0x01B6	0x30FE      	MOVLW      254
0x01B7	0x1283      	BCF        STATUS, 5
0x01B8	0x1303      	BCF        STATUS, 6
0x01B9	0x05F0      	ANDWF      R0, 1
0x01BA	0x0870      	MOVF       R0, 0
0x01BB	0x00AF      	MOVWF      FLOC__flash_seg
0x01BC	0x29CC      	GOTO       L_flash_seg36
L_flash_seg35:
0x01BD	0x0829      	MOVF       _hours, 0
0x01BE	0x00B4      	MOVWF      FARG_bcd_to_seg_bcd
0x01BF	0x0CB4      	RRF        FARG_bcd_to_seg_bcd, 1
0x01C0	0x13B4      	BCF        FARG_bcd_to_seg_bcd, 7
0x01C1	0x0CB4      	RRF        FARG_bcd_to_seg_bcd, 1
0x01C2	0x13B4      	BCF        FARG_bcd_to_seg_bcd, 7
0x01C3	0x0CB4      	RRF        FARG_bcd_to_seg_bcd, 1
0x01C4	0x13B4      	BCF        FARG_bcd_to_seg_bcd, 7
0x01C5	0x0CB4      	RRF        FARG_bcd_to_seg_bcd, 1
0x01C6	0x13B4      	BCF        FARG_bcd_to_seg_bcd, 7
0x01C7	0x203E      	CALL       _bcd_to_seg
0x01C8	0x1283      	BCF        STATUS, 5
0x01C9	0x1303      	BCF        STATUS, 6
0x01CA	0x0870      	MOVF       R0, 0
0x01CB	0x00AF      	MOVWF      FLOC__flash_seg
L_flash_seg36:
0x01CC	0x082F      	MOVF       FLOC__flash_seg, 0
0x01CD	0x0087      	MOVWF      PORTC
;DigitalClock.c,118 :: 		Delay_us(15);
0x01CE	0x3009      	MOVLW      9
0x01CF	0x00FD      	MOVWF      R13
L_flash_seg37:
0x01D0	0x0BFD      	DECFSZ     R13, 1
0x01D1	0x29D0      	GOTO       L_flash_seg37
0x01D2	0x0000      	NOP
0x01D3	0x0000      	NOP
;DigitalClock.c,119 :: 		PORTC = 0xFF;
0x01D4	0x30FF      	MOVLW      255
0x01D5	0x0087      	MOVWF      PORTC
;DigitalClock.c,120 :: 		PORTB = 0xFF;
0x01D6	0x30FF      	MOVLW      255
0x01D7	0x0086      	MOVWF      PORTB
;DigitalClock.c,122 :: 		break;
0x01D8	0x2AC0      	GOTO       L_flash_seg19
;DigitalClock.c,126 :: 		case 3: {
L_flash_seg38:
;DigitalClock.c,128 :: 		PORTB = 0xEF;
0x01D9	0x30EF      	MOVLW      239
0x01DA	0x0086      	MOVWF      PORTB
;DigitalClock.c,129 :: 		PORTC = bcd_to_seg('X');
0x01DB	0x3058      	MOVLW      88
0x01DC	0x00B4      	MOVWF      FARG_bcd_to_seg_bcd
0x01DD	0x203E      	CALL       _bcd_to_seg
0x01DE	0x1283      	BCF        STATUS, 5
0x01DF	0x1303      	BCF        STATUS, 6
0x01E0	0x0870      	MOVF       R0, 0
0x01E1	0x0087      	MOVWF      PORTC
;DigitalClock.c,130 :: 		Delay_us(15);
0x01E2	0x3009      	MOVLW      9
0x01E3	0x00FD      	MOVWF      R13
L_flash_seg39:
0x01E4	0x0BFD      	DECFSZ     R13, 1
0x01E5	0x29E4      	GOTO       L_flash_seg39
0x01E6	0x0000      	NOP
0x01E7	0x0000      	NOP
;DigitalClock.c,131 :: 		PORTC = 0xFF;
0x01E8	0x30FF      	MOVLW      255
0x01E9	0x0087      	MOVWF      PORTC
;DigitalClock.c,132 :: 		PORTB = 0xDF;
0x01EA	0x30DF      	MOVLW      223
0x01EB	0x0086      	MOVWF      PORTB
;DigitalClock.c,133 :: 		PORTC = bcd_to_seg('E');
0x01EC	0x3045      	MOVLW      69
0x01ED	0x00B4      	MOVWF      FARG_bcd_to_seg_bcd
0x01EE	0x203E      	CALL       _bcd_to_seg
0x01EF	0x1283      	BCF        STATUS, 5
0x01F0	0x1303      	BCF        STATUS, 6
0x01F1	0x0870      	MOVF       R0, 0
0x01F2	0x0087      	MOVWF      PORTC
;DigitalClock.c,134 :: 		Delay_us(15);
0x01F3	0x3009      	MOVLW      9
0x01F4	0x00FD      	MOVWF      R13
L_flash_seg40:
0x01F5	0x0BFD      	DECFSZ     R13, 1
0x01F6	0x29F5      	GOTO       L_flash_seg40
0x01F7	0x0000      	NOP
0x01F8	0x0000      	NOP
;DigitalClock.c,135 :: 		PORTC = 0xFF;
0x01F9	0x30FF      	MOVLW      255
0x01FA	0x0087      	MOVWF      PORTC
;DigitalClock.c,136 :: 		PORTB = 0xBF;
0x01FB	0x30BF      	MOVLW      191
0x01FC	0x0086      	MOVWF      PORTB
;DigitalClock.c,137 :: 		PORTC = bcd_to_seg('L');
0x01FD	0x304C      	MOVLW      76
0x01FE	0x00B4      	MOVWF      FARG_bcd_to_seg_bcd
0x01FF	0x203E      	CALL       _bcd_to_seg
0x0200	0x1283      	BCF        STATUS, 5
0x0201	0x1303      	BCF        STATUS, 6
0x0202	0x0870      	MOVF       R0, 0
0x0203	0x0087      	MOVWF      PORTC
;DigitalClock.c,138 :: 		Delay_us(15);
0x0204	0x3009      	MOVLW      9
0x0205	0x00FD      	MOVWF      R13
L_flash_seg41:
0x0206	0x0BFD      	DECFSZ     R13, 1
0x0207	0x2A06      	GOTO       L_flash_seg41
0x0208	0x0000      	NOP
0x0209	0x0000      	NOP
;DigitalClock.c,139 :: 		PORTC = 0xFF;
0x020A	0x30FF      	MOVLW      255
0x020B	0x0087      	MOVWF      PORTC
;DigitalClock.c,140 :: 		PORTB = 0x7F;
0x020C	0x307F      	MOVLW      127
0x020D	0x0086      	MOVWF      PORTB
;DigitalClock.c,141 :: 		PORTC = bcd_to_seg('A');
0x020E	0x3041      	MOVLW      65
0x020F	0x00B4      	MOVWF      FARG_bcd_to_seg_bcd
0x0210	0x203E      	CALL       _bcd_to_seg
0x0211	0x1283      	BCF        STATUS, 5
0x0212	0x1303      	BCF        STATUS, 6
0x0213	0x0870      	MOVF       R0, 0
0x0214	0x0087      	MOVWF      PORTC
;DigitalClock.c,142 :: 		Delay_us(15);
0x0215	0x3009      	MOVLW      9
0x0216	0x00FD      	MOVWF      R13
L_flash_seg42:
0x0217	0x0BFD      	DECFSZ     R13, 1
0x0218	0x2A17      	GOTO       L_flash_seg42
0x0219	0x0000      	NOP
0x021A	0x0000      	NOP
;DigitalClock.c,143 :: 		PORTC = 0xFF;
0x021B	0x30FF      	MOVLW      255
0x021C	0x0087      	MOVWF      PORTC
;DigitalClock.c,144 :: 		PORTB = 0xFF;
0x021D	0x30FF      	MOVLW      255
0x021E	0x0086      	MOVWF      PORTB
;DigitalClock.c,146 :: 		break;
0x021F	0x2AC0      	GOTO       L_flash_seg19
;DigitalClock.c,150 :: 		case 4: {
L_flash_seg43:
;DigitalClock.c,152 :: 		PORTB = 0xEF;
0x0220	0x30EF      	MOVLW      239
0x0221	0x0086      	MOVWF      PORTB
;DigitalClock.c,153 :: 		PORTC = bcd_to_seg('C');
0x0222	0x3043      	MOVLW      67
0x0223	0x00B4      	MOVWF      FARG_bcd_to_seg_bcd
0x0224	0x203E      	CALL       _bcd_to_seg
0x0225	0x1283      	BCF        STATUS, 5
0x0226	0x1303      	BCF        STATUS, 6
0x0227	0x0870      	MOVF       R0, 0
0x0228	0x0087      	MOVWF      PORTC
;DigitalClock.c,154 :: 		Delay_us(15);
0x0229	0x3009      	MOVLW      9
0x022A	0x00FD      	MOVWF      R13
L_flash_seg44:
0x022B	0x0BFD      	DECFSZ     R13, 1
0x022C	0x2A2B      	GOTO       L_flash_seg44
0x022D	0x0000      	NOP
0x022E	0x0000      	NOP
;DigitalClock.c,155 :: 		PORTC = 0xFF;
0x022F	0x30FF      	MOVLW      255
0x0230	0x0087      	MOVWF      PORTC
;DigitalClock.c,156 :: 		PORTB = 0xDF;
0x0231	0x30DF      	MOVLW      223
0x0232	0x0086      	MOVWF      PORTB
;DigitalClock.c,157 :: 		PORTC = bcd_to_seg(0);
0x0233	0x01B4      	CLRF       FARG_bcd_to_seg_bcd
0x0234	0x203E      	CALL       _bcd_to_seg
0x0235	0x1283      	BCF        STATUS, 5
0x0236	0x1303      	BCF        STATUS, 6
0x0237	0x0870      	MOVF       R0, 0
0x0238	0x0087      	MOVWF      PORTC
;DigitalClock.c,158 :: 		Delay_us(15);
0x0239	0x3009      	MOVLW      9
0x023A	0x00FD      	MOVWF      R13
L_flash_seg45:
0x023B	0x0BFD      	DECFSZ     R13, 1
0x023C	0x2A3B      	GOTO       L_flash_seg45
0x023D	0x0000      	NOP
0x023E	0x0000      	NOP
;DigitalClock.c,159 :: 		PORTC = 0xFF;
0x023F	0x30FF      	MOVLW      255
0x0240	0x0087      	MOVWF      PORTC
;DigitalClock.c,160 :: 		PORTB = 0xBF;
0x0241	0x30BF      	MOVLW      191
0x0242	0x0086      	MOVWF      PORTB
;DigitalClock.c,161 :: 		PORTC = bcd_to_seg('L');
0x0243	0x304C      	MOVLW      76
0x0244	0x00B4      	MOVWF      FARG_bcd_to_seg_bcd
0x0245	0x203E      	CALL       _bcd_to_seg
0x0246	0x1283      	BCF        STATUS, 5
0x0247	0x1303      	BCF        STATUS, 6
0x0248	0x0870      	MOVF       R0, 0
0x0249	0x0087      	MOVWF      PORTC
;DigitalClock.c,162 :: 		Delay_us(15);
0x024A	0x3009      	MOVLW      9
0x024B	0x00FD      	MOVWF      R13
L_flash_seg46:
0x024C	0x0BFD      	DECFSZ     R13, 1
0x024D	0x2A4C      	GOTO       L_flash_seg46
0x024E	0x0000      	NOP
0x024F	0x0000      	NOP
;DigitalClock.c,163 :: 		PORTC = 0xFF;
0x0250	0x30FF      	MOVLW      255
0x0251	0x0087      	MOVWF      PORTC
;DigitalClock.c,164 :: 		PORTB = 0x7F;
0x0252	0x307F      	MOVLW      127
0x0253	0x0086      	MOVWF      PORTB
;DigitalClock.c,165 :: 		PORTC = bcd_to_seg('C');
0x0254	0x3043      	MOVLW      67
0x0255	0x00B4      	MOVWF      FARG_bcd_to_seg_bcd
0x0256	0x203E      	CALL       _bcd_to_seg
0x0257	0x1283      	BCF        STATUS, 5
0x0258	0x1303      	BCF        STATUS, 6
0x0259	0x0870      	MOVF       R0, 0
0x025A	0x0087      	MOVWF      PORTC
;DigitalClock.c,166 :: 		Delay_us(15);
0x025B	0x3009      	MOVLW      9
0x025C	0x00FD      	MOVWF      R13
L_flash_seg47:
0x025D	0x0BFD      	DECFSZ     R13, 1
0x025E	0x2A5D      	GOTO       L_flash_seg47
0x025F	0x0000      	NOP
0x0260	0x0000      	NOP
;DigitalClock.c,167 :: 		PORTC = 0xFF;
0x0261	0x30FF      	MOVLW      255
0x0262	0x0087      	MOVWF      PORTC
;DigitalClock.c,168 :: 		PORTB = 0xFF;
0x0263	0x30FF      	MOVLW      255
0x0264	0x0086      	MOVWF      PORTB
;DigitalClock.c,170 :: 		break;
0x0265	0x2AC0      	GOTO       L_flash_seg19
;DigitalClock.c,174 :: 		default: {
L_flash_seg48:
;DigitalClock.c,176 :: 		PORTB = 0xEF;
0x0266	0x30EF      	MOVLW      239
0x0267	0x0086      	MOVWF      PORTB
;DigitalClock.c,177 :: 		PORTC = bcd_to_seg(0xFF);
0x0268	0x30FF      	MOVLW      255
0x0269	0x00B4      	MOVWF      FARG_bcd_to_seg_bcd
0x026A	0x203E      	CALL       _bcd_to_seg
0x026B	0x1283      	BCF        STATUS, 5
0x026C	0x1303      	BCF        STATUS, 6
0x026D	0x0870      	MOVF       R0, 0
0x026E	0x0087      	MOVWF      PORTC
;DigitalClock.c,178 :: 		Delay_us(15);
0x026F	0x3009      	MOVLW      9
0x0270	0x00FD      	MOVWF      R13
L_flash_seg49:
0x0271	0x0BFD      	DECFSZ     R13, 1
0x0272	0x2A71      	GOTO       L_flash_seg49
0x0273	0x0000      	NOP
0x0274	0x0000      	NOP
;DigitalClock.c,179 :: 		PORTC = 0xFF;
0x0275	0x30FF      	MOVLW      255
0x0276	0x0087      	MOVWF      PORTC
;DigitalClock.c,180 :: 		PORTB = 0xDF;
0x0277	0x30DF      	MOVLW      223
0x0278	0x0086      	MOVWF      PORTB
;DigitalClock.c,181 :: 		PORTC = bcd_to_seg(0xFF);
0x0279	0x30FF      	MOVLW      255
0x027A	0x00B4      	MOVWF      FARG_bcd_to_seg_bcd
0x027B	0x203E      	CALL       _bcd_to_seg
0x027C	0x1283      	BCF        STATUS, 5
0x027D	0x1303      	BCF        STATUS, 6
0x027E	0x0870      	MOVF       R0, 0
0x027F	0x0087      	MOVWF      PORTC
;DigitalClock.c,182 :: 		Delay_us(15);
0x0280	0x3009      	MOVLW      9
0x0281	0x00FD      	MOVWF      R13
L_flash_seg50:
0x0282	0x0BFD      	DECFSZ     R13, 1
0x0283	0x2A82      	GOTO       L_flash_seg50
0x0284	0x0000      	NOP
0x0285	0x0000      	NOP
;DigitalClock.c,183 :: 		PORTC = 0xFF;
0x0286	0x30FF      	MOVLW      255
0x0287	0x0087      	MOVWF      PORTC
;DigitalClock.c,184 :: 		PORTB = 0xBF;
0x0288	0x30BF      	MOVLW      191
0x0289	0x0086      	MOVWF      PORTB
;DigitalClock.c,185 :: 		PORTC = bcd_to_seg(0xFF);
0x028A	0x30FF      	MOVLW      255
0x028B	0x00B4      	MOVWF      FARG_bcd_to_seg_bcd
0x028C	0x203E      	CALL       _bcd_to_seg
0x028D	0x1283      	BCF        STATUS, 5
0x028E	0x1303      	BCF        STATUS, 6
0x028F	0x0870      	MOVF       R0, 0
0x0290	0x0087      	MOVWF      PORTC
;DigitalClock.c,186 :: 		Delay_us(15);
0x0291	0x3009      	MOVLW      9
0x0292	0x00FD      	MOVWF      R13
L_flash_seg51:
0x0293	0x0BFD      	DECFSZ     R13, 1
0x0294	0x2A93      	GOTO       L_flash_seg51
0x0295	0x0000      	NOP
0x0296	0x0000      	NOP
;DigitalClock.c,187 :: 		PORTC = 0xFF;
0x0297	0x30FF      	MOVLW      255
0x0298	0x0087      	MOVWF      PORTC
;DigitalClock.c,188 :: 		PORTB = 0x7F;
0x0299	0x307F      	MOVLW      127
0x029A	0x0086      	MOVWF      PORTB
;DigitalClock.c,189 :: 		PORTC = bcd_to_seg(0xFF);
0x029B	0x30FF      	MOVLW      255
0x029C	0x00B4      	MOVWF      FARG_bcd_to_seg_bcd
0x029D	0x203E      	CALL       _bcd_to_seg
0x029E	0x1283      	BCF        STATUS, 5
0x029F	0x1303      	BCF        STATUS, 6
0x02A0	0x0870      	MOVF       R0, 0
0x02A1	0x0087      	MOVWF      PORTC
;DigitalClock.c,190 :: 		Delay_us(15);
0x02A2	0x3009      	MOVLW      9
0x02A3	0x00FD      	MOVWF      R13
L_flash_seg52:
0x02A4	0x0BFD      	DECFSZ     R13, 1
0x02A5	0x2AA4      	GOTO       L_flash_seg52
0x02A6	0x0000      	NOP
0x02A7	0x0000      	NOP
;DigitalClock.c,191 :: 		PORTC = 0xFF;
0x02A8	0x30FF      	MOVLW      255
0x02A9	0x0087      	MOVWF      PORTC
;DigitalClock.c,192 :: 		PORTB = 0xFF;
0x02AA	0x30FF      	MOVLW      255
0x02AB	0x0086      	MOVWF      PORTB
;DigitalClock.c,194 :: 		return;
0x02AC	0x2AC0      	GOTO       L_end_flash_seg
;DigitalClock.c,197 :: 		}
L_flash_seg18:
0x02AD	0x1283      	BCF        STATUS, 5
0x02AE	0x1303      	BCF        STATUS, 6
0x02AF	0x082E      	MOVF       FARG_flash_seg_select, 0
0x02B0	0x3A01      	XORLW      1
0x02B1	0x1903      	BTFSC      STATUS, 2
0x02B2	0x28DC      	GOTO       L_flash_seg20
0x02B3	0x082E      	MOVF       FARG_flash_seg_select, 0
0x02B4	0x3A02      	XORLW      2
0x02B5	0x1903      	BTFSC      STATUS, 2
0x02B6	0x292E      	GOTO       L_flash_seg25
0x02B7	0x082E      	MOVF       FARG_flash_seg_select, 0
0x02B8	0x3A03      	XORLW      3
0x02B9	0x1903      	BTFSC      STATUS, 2
0x02BA	0x29D9      	GOTO       L_flash_seg38
0x02BB	0x082E      	MOVF       FARG_flash_seg_select, 0
0x02BC	0x3A04      	XORLW      4
0x02BD	0x1903      	BTFSC      STATUS, 2
0x02BE	0x2A20      	GOTO       L_flash_seg43
0x02BF	0x2A66      	GOTO       L_flash_seg48
L_flash_seg19:
;DigitalClock.c,199 :: 		}
L_end_flash_seg:
0x02C0	0x0008      	RETURN
; end of _flash_seg
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x02C1	0x1283      	BCF        STATUS, 5
0x02C2	0x1303      	BCF        STATUS, 6
0x02C3	0x0823      	MOVF       ___DoICPAddr+1, 0
0x02C4	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x02C5	0x0822      	MOVF       ___DoICPAddr, 0
0x02C6	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x02C7	0x0008      	RETURN
; end of _____DoICP
_Soft_I2C_Stop:
;__Lib_SoftI2C.c,168 :: 		
;__Lib_SoftI2C.c,170 :: 		
0x02C8	0x20B4      	CALL       __Lib_SoftI2C_PutZerosToLATSda
;__Lib_SoftI2C.c,171 :: 		
0x02C9	0x1683      	BSF        STATUS, 5
0x02CA	0x1205      	BCF        Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0)
;__Lib_SoftI2C.c,173 :: 		
0x02CB	0x20B1      	CALL       _Delay_1us
0x02CC	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,175 :: 		
0x02CD	0x1685      	BSF        Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0)
;__Lib_SoftI2C.c,177 :: 		
0x02CE	0x1283      	BCF        STATUS, 5
0x02CF	0x11A4      	BCF        __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0)
;__Lib_SoftI2C.c,178 :: 		
L_Soft_I2C_Stop13:
0x02D0	0x1A85      	BTFSC      Soft_I2C_Scl, BitPos(Soft_I2C_Scl+0)
0x02D1	0x2AD6      	GOTO       L_Soft_I2C_Stop14
;__Lib_SoftI2C.c,179 :: 		
0x02D2	0x1DA4      	BTFSS      __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0)
0x02D3	0x2AD5      	GOTO       L_Soft_I2C_Stop15
;__Lib_SoftI2C.c,180 :: 		
0x02D4	0x2AD6      	GOTO       L_Soft_I2C_Stop14
L_Soft_I2C_Stop15:
0x02D5	0x2AD0      	GOTO       L_Soft_I2C_Stop13
L_Soft_I2C_Stop14:
;__Lib_SoftI2C.c,182 :: 		
0x02D6	0x20B1      	CALL       _Delay_1us
0x02D7	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,183 :: 		
0x02D8	0x20B1      	CALL       _Delay_1us
0x02D9	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,184 :: 		
0x02DA	0x20B1      	CALL       _Delay_1us
0x02DB	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,185 :: 		
0x02DC	0x20B1      	CALL       _Delay_1us
0x02DD	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,187 :: 		
0x02DE	0x1683      	BSF        STATUS, 5
0x02DF	0x1605      	BSF        Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0)
;__Lib_SoftI2C.c,189 :: 		
0x02E0	0x20B1      	CALL       _Delay_1us
0x02E1	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,190 :: 		
L_end_Soft_I2C_Stop:
0x02E2	0x0008      	RETURN
; end of _Soft_I2C_Stop
_Soft_I2C_Read:
;__Lib_SoftI2C.c,86 :: 		
;__Lib_SoftI2C.c,87 :: 		
0x02E3	0x1283      	BCF        STATUS, 5
0x02E4	0x1303      	BCF        STATUS, 6
0x02E5	0x01B0      	CLRF       Soft_I2C_Read_result_L0
0x02E6	0x01B1      	CLRF       Soft_I2C_Read_result_L0+1
0x02E7	0x3080      	MOVLW      128
0x02E8	0x00B2      	MOVWF      Soft_I2C_Read_temp_L0
0x02E9	0x3000      	MOVLW      0
0x02EA	0x00B3      	MOVWF      Soft_I2C_Read_temp_L0+1
;__Lib_SoftI2C.c,89 :: 		
L_Soft_I2C_Read3:
0x02EB	0x0832      	MOVF       Soft_I2C_Read_temp_L0, 0
0x02EC	0x0433      	IORWF      Soft_I2C_Read_temp_L0+1, 0
0x02ED	0x1903      	BTFSC      STATUS, 2
0x02EE	0x2B0E      	GOTO       L_Soft_I2C_Read4
;__Lib_SoftI2C.c,90 :: 		
0x02EF	0x20B1      	CALL       _Delay_1us
0x02F0	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,92 :: 		
0x02F1	0x1683      	BSF        STATUS, 5
0x02F2	0x1605      	BSF        Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0)
;__Lib_SoftI2C.c,94 :: 		
0x02F3	0x20B1      	CALL       _Delay_1us
0x02F4	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,96 :: 		
0x02F5	0x1685      	BSF        Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0)
;__Lib_SoftI2C.c,98 :: 		
0x02F6	0x1283      	BCF        STATUS, 5
0x02F7	0x11A4      	BCF        __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0)
;__Lib_SoftI2C.c,99 :: 		
L_Soft_I2C_Read5:
0x02F8	0x1A85      	BTFSC      Soft_I2C_Scl, BitPos(Soft_I2C_Scl+0)
0x02F9	0x2AFE      	GOTO       L_Soft_I2C_Read6
;__Lib_SoftI2C.c,100 :: 		
0x02FA	0x1DA4      	BTFSS      __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0)
0x02FB	0x2AFD      	GOTO       L_Soft_I2C_Read7
;__Lib_SoftI2C.c,101 :: 		
0x02FC	0x2AFE      	GOTO       L_Soft_I2C_Read6
L_Soft_I2C_Read7:
0x02FD	0x2AF8      	GOTO       L_Soft_I2C_Read5
L_Soft_I2C_Read6:
;__Lib_SoftI2C.c,103 :: 		
0x02FE	0x1E05      	BTFSS      Soft_I2C_Sda, BitPos(Soft_I2C_Sda+0)
0x02FF	0x2B04      	GOTO       L_Soft_I2C_Read8
;__Lib_SoftI2C.c,104 :: 		
0x0300	0x0832      	MOVF       Soft_I2C_Read_temp_L0, 0
0x0301	0x04B0      	IORWF      Soft_I2C_Read_result_L0, 1
0x0302	0x0833      	MOVF       Soft_I2C_Read_temp_L0+1, 0
0x0303	0x04B1      	IORWF      Soft_I2C_Read_result_L0+1, 1
L_Soft_I2C_Read8:
;__Lib_SoftI2C.c,106 :: 		
0x0304	0x20B1      	CALL       _Delay_1us
0x0305	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,108 :: 		
0x0306	0x20BF      	CALL       __Lib_SoftI2C_PutZerosToLATScl
;__Lib_SoftI2C.c,109 :: 		
0x0307	0x1683      	BSF        STATUS, 5
0x0308	0x1285      	BCF        Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0)
;__Lib_SoftI2C.c,111 :: 		
0x0309	0x1283      	BCF        STATUS, 5
0x030A	0x0CB3      	RRF        Soft_I2C_Read_temp_L0+1, 1
0x030B	0x0CB2      	RRF        Soft_I2C_Read_temp_L0, 1
0x030C	0x13B3      	BCF        Soft_I2C_Read_temp_L0+1, 7
;__Lib_SoftI2C.c,112 :: 		
0x030D	0x2AEB      	GOTO       L_Soft_I2C_Read3
L_Soft_I2C_Read4:
;__Lib_SoftI2C.c,114 :: 		
0x030E	0x1683      	BSF        STATUS, 5
0x030F	0x1605      	BSF        Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0)
;__Lib_SoftI2C.c,116 :: 		
0x0310	0x20B1      	CALL       _Delay_1us
0x0311	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,118 :: 		
0x0312	0x1283      	BCF        STATUS, 5
0x0313	0x082E      	MOVF       FARG_Soft_I2C_Read_ack, 0
0x0314	0x042F      	IORWF      FARG_Soft_I2C_Read_ack+1, 0
0x0315	0x1903      	BTFSC      STATUS, 2
0x0316	0x2B1A      	GOTO       L_Soft_I2C_Read9
;__Lib_SoftI2C.c,119 :: 		
0x0317	0x20B4      	CALL       __Lib_SoftI2C_PutZerosToLATSda
;__Lib_SoftI2C.c,120 :: 		
0x0318	0x1683      	BSF        STATUS, 5
0x0319	0x1205      	BCF        Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0)
;__Lib_SoftI2C.c,121 :: 		
L_Soft_I2C_Read9:
0x031A	0x1683      	BSF        STATUS, 5
;__Lib_SoftI2C.c,123 :: 		
0x031B	0x20B1      	CALL       _Delay_1us
0x031C	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,125 :: 		
0x031D	0x1685      	BSF        Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0)
;__Lib_SoftI2C.c,127 :: 		
0x031E	0x1283      	BCF        STATUS, 5
0x031F	0x11A4      	BCF        __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0)
;__Lib_SoftI2C.c,128 :: 		
L_Soft_I2C_Read10:
0x0320	0x1A85      	BTFSC      Soft_I2C_Scl, BitPos(Soft_I2C_Scl+0)
0x0321	0x2B26      	GOTO       L_Soft_I2C_Read11
;__Lib_SoftI2C.c,129 :: 		
0x0322	0x1DA4      	BTFSS      __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0)
0x0323	0x2B25      	GOTO       L_Soft_I2C_Read12
;__Lib_SoftI2C.c,130 :: 		
0x0324	0x2B26      	GOTO       L_Soft_I2C_Read11
L_Soft_I2C_Read12:
0x0325	0x2B20      	GOTO       L_Soft_I2C_Read10
L_Soft_I2C_Read11:
;__Lib_SoftI2C.c,132 :: 		
0x0326	0x20B1      	CALL       _Delay_1us
0x0327	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,134 :: 		
0x0328	0x20BF      	CALL       __Lib_SoftI2C_PutZerosToLATScl
;__Lib_SoftI2C.c,135 :: 		
0x0329	0x1683      	BSF        STATUS, 5
0x032A	0x1285      	BCF        Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0)
;__Lib_SoftI2C.c,137 :: 		
0x032B	0x20B1      	CALL       _Delay_1us
0x032C	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,139 :: 		
0x032D	0x20B4      	CALL       __Lib_SoftI2C_PutZerosToLATSda
;__Lib_SoftI2C.c,140 :: 		
0x032E	0x1683      	BSF        STATUS, 5
0x032F	0x1205      	BCF        Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0)
;__Lib_SoftI2C.c,142 :: 		
0x0330	0x1283      	BCF        STATUS, 5
0x0331	0x0830      	MOVF       Soft_I2C_Read_result_L0, 0
0x0332	0x00F0      	MOVWF      R0
;__Lib_SoftI2C.c,143 :: 		
L_end_Soft_I2C_Read:
0x0333	0x0008      	RETURN
; end of _Soft_I2C_Read
_Soft_I2C_Write:
;__Lib_SoftI2C.c,194 :: 		
;__Lib_SoftI2C.c,195 :: 		
0x0334	0x3001      	MOVLW      1
0x0335	0x1283      	BCF        STATUS, 5
0x0336	0x1303      	BCF        STATUS, 6
0x0337	0x00B1      	MOVWF      Soft_I2C_Write_result_L0
0x0338	0x3000      	MOVLW      0
0x0339	0x00B2      	MOVWF      Soft_I2C_Write_result_L0+1
;__Lib_SoftI2C.c,197 :: 		
0x033A	0x3080      	MOVLW      128
0x033B	0x00AF      	MOVWF      Soft_I2C_Write_temp_L0
0x033C	0x01B0      	CLRF       Soft_I2C_Write_temp_L0+1
;__Lib_SoftI2C.c,199 :: 		
L_Soft_I2C_Write16:
0x033D	0x082F      	MOVF       Soft_I2C_Write_temp_L0, 0
0x033E	0x0430      	IORWF      Soft_I2C_Write_temp_L0+1, 0
0x033F	0x1903      	BTFSC      STATUS, 2
0x0340	0x2B6A      	GOTO       L_Soft_I2C_Write17
;__Lib_SoftI2C.c,200 :: 		
0x0341	0x20B1      	CALL       _Delay_1us
0x0342	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,201 :: 		
0x0343	0x20B1      	CALL       _Delay_1us
0x0344	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,203 :: 		
0x0345	0x20BF      	CALL       __Lib_SoftI2C_PutZerosToLATScl
;__Lib_SoftI2C.c,204 :: 		
0x0346	0x1683      	BSF        STATUS, 5
0x0347	0x1285      	BCF        Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0)
;__Lib_SoftI2C.c,206 :: 		
0x0348	0x20B1      	CALL       _Delay_1us
0x0349	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,208 :: 		
0x034A	0x1283      	BCF        STATUS, 5
0x034B	0x082F      	MOVF       Soft_I2C_Write_temp_L0, 0
0x034C	0x052E      	ANDWF      FARG_Soft_I2C_Write_data_, 0
0x034D	0x00F0      	MOVWF      R0
0x034E	0x3000      	MOVLW      0
0x034F	0x0530      	ANDWF      Soft_I2C_Write_temp_L0+1, 0
0x0350	0x00F1      	MOVWF      R0+1
0x0351	0x0870      	MOVF       R0, 0
0x0352	0x0471      	IORWF      R0+1, 0
0x0353	0x1903      	BTFSC      STATUS, 2
0x0354	0x2B58      	GOTO       L_Soft_I2C_Write18
;__Lib_SoftI2C.c,209 :: 		
0x0355	0x1683      	BSF        STATUS, 5
0x0356	0x1605      	BSF        Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0)
;__Lib_SoftI2C.c,210 :: 		
0x0357	0x2B5B      	GOTO       L_Soft_I2C_Write19
L_Soft_I2C_Write18:
;__Lib_SoftI2C.c,212 :: 		
0x0358	0x20B4      	CALL       __Lib_SoftI2C_PutZerosToLATSda
;__Lib_SoftI2C.c,213 :: 		
0x0359	0x1683      	BSF        STATUS, 5
0x035A	0x1205      	BCF        Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0)
;__Lib_SoftI2C.c,214 :: 		
L_Soft_I2C_Write19:
;__Lib_SoftI2C.c,216 :: 		
0x035B	0x20B1      	CALL       _Delay_1us
0x035C	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,218 :: 		
0x035D	0x1685      	BSF        Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0)
;__Lib_SoftI2C.c,220 :: 		
0x035E	0x1283      	BCF        STATUS, 5
0x035F	0x11A4      	BCF        __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0)
;__Lib_SoftI2C.c,221 :: 		
L_Soft_I2C_Write20:
0x0360	0x1A85      	BTFSC      Soft_I2C_Scl, BitPos(Soft_I2C_Scl+0)
0x0361	0x2B66      	GOTO       L_Soft_I2C_Write21
;__Lib_SoftI2C.c,222 :: 		
0x0362	0x1DA4      	BTFSS      __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0)
0x0363	0x2B65      	GOTO       L_Soft_I2C_Write22
;__Lib_SoftI2C.c,223 :: 		
0x0364	0x2B66      	GOTO       L_Soft_I2C_Write21
L_Soft_I2C_Write22:
0x0365	0x2B60      	GOTO       L_Soft_I2C_Write20
L_Soft_I2C_Write21:
;__Lib_SoftI2C.c,225 :: 		
0x0366	0x0CB0      	RRF        Soft_I2C_Write_temp_L0+1, 1
0x0367	0x0CAF      	RRF        Soft_I2C_Write_temp_L0, 1
0x0368	0x13B0      	BCF        Soft_I2C_Write_temp_L0+1, 7
;__Lib_SoftI2C.c,226 :: 		
0x0369	0x2B3D      	GOTO       L_Soft_I2C_Write16
L_Soft_I2C_Write17:
;__Lib_SoftI2C.c,228 :: 		
0x036A	0x01B1      	CLRF       Soft_I2C_Write_result_L0
0x036B	0x01B2      	CLRF       Soft_I2C_Write_result_L0+1
;__Lib_SoftI2C.c,230 :: 		
0x036C	0x20B1      	CALL       _Delay_1us
0x036D	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,232 :: 		
0x036E	0x20BF      	CALL       __Lib_SoftI2C_PutZerosToLATScl
;__Lib_SoftI2C.c,233 :: 		
0x036F	0x1683      	BSF        STATUS, 5
0x0370	0x1285      	BCF        Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0)
;__Lib_SoftI2C.c,235 :: 		
0x0371	0x20B1      	CALL       _Delay_1us
0x0372	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,237 :: 		
0x0373	0x1605      	BSF        Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0)
;__Lib_SoftI2C.c,239 :: 		
0x0374	0x20B1      	CALL       _Delay_1us
0x0375	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,240 :: 		
0x0376	0x20B1      	CALL       _Delay_1us
0x0377	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,242 :: 		
0x0378	0x1685      	BSF        Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0)
;__Lib_SoftI2C.c,244 :: 		
0x0379	0x1283      	BCF        STATUS, 5
0x037A	0x11A4      	BCF        __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0)
;__Lib_SoftI2C.c,245 :: 		
L_Soft_I2C_Write23:
0x037B	0x1A85      	BTFSC      Soft_I2C_Scl, BitPos(Soft_I2C_Scl+0)
0x037C	0x2B81      	GOTO       L_Soft_I2C_Write24
;__Lib_SoftI2C.c,246 :: 		
0x037D	0x1DA4      	BTFSS      __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0)
0x037E	0x2B80      	GOTO       L_Soft_I2C_Write25
;__Lib_SoftI2C.c,247 :: 		
0x037F	0x2B81      	GOTO       L_Soft_I2C_Write24
L_Soft_I2C_Write25:
0x0380	0x2B7B      	GOTO       L_Soft_I2C_Write23
L_Soft_I2C_Write24:
;__Lib_SoftI2C.c,249 :: 		
0x0381	0x01B1      	CLRF       Soft_I2C_Write_result_L0
0x0382	0x01B2      	CLRF       Soft_I2C_Write_result_L0+1
;__Lib_SoftI2C.c,251 :: 		
0x0383	0x20B1      	CALL       _Delay_1us
0x0384	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,253 :: 		
0x0385	0x1E05      	BTFSS      Soft_I2C_Sda, BitPos(Soft_I2C_Sda+0)
0x0386	0x2B88      	GOTO       L_Soft_I2C_Write26
;__Lib_SoftI2C.c,254 :: 		
0x0387	0x1431      	BSF        Soft_I2C_Write_result_L0, 0
L_Soft_I2C_Write26:
;__Lib_SoftI2C.c,256 :: 		
0x0388	0x20B1      	CALL       _Delay_1us
0x0389	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,257 :: 		
0x038A	0x20B1      	CALL       _Delay_1us
0x038B	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,258 :: 		
0x038C	0x20B1      	CALL       _Delay_1us
0x038D	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,259 :: 		
0x038E	0x20B1      	CALL       _Delay_1us
0x038F	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,260 :: 		
0x0390	0x20B1      	CALL       _Delay_1us
0x0391	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,261 :: 		
0x0392	0x20B1      	CALL       _Delay_1us
0x0393	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,262 :: 		
0x0394	0x20B1      	CALL       _Delay_1us
0x0395	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,263 :: 		
0x0396	0x20B1      	CALL       _Delay_1us
0x0397	0x20B1      	CALL       _Delay_1us
;__Lib_SoftI2C.c,265 :: 		
0x0398	0x20BF      	CALL       __Lib_SoftI2C_PutZerosToLATScl
;__Lib_SoftI2C.c,266 :: 		
0x0399	0x1683      	BSF        STATUS, 5
0x039A	0x1285      	BCF        Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0)
;__Lib_SoftI2C.c,267 :: 		
0x039B	0x20B4      	CALL       __Lib_SoftI2C_PutZerosToLATSda
;__Lib_SoftI2C.c,268 :: 		
0x039C	0x1683      	BSF        STATUS, 5
0x039D	0x1205      	BCF        Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0)
;__Lib_SoftI2C.c,270 :: 		
0x039E	0x1283      	BCF        STATUS, 5
0x039F	0x0831      	MOVF       Soft_I2C_Write_result_L0, 0
0x03A0	0x00F0      	MOVWF      R0
;__Lib_SoftI2C.c,271 :: 		
L_end_Soft_I2C_Write:
0x03A1	0x0008      	RETURN
; end of _Soft_I2C_Write
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x03A2	0x22C1      	CALL       _____DoICP
0x03A3	0x118A      	BCF        PCLATH, 3
0x03A4	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x03A5	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x03A6	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x03A7	0x0AA2      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x03A8	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x03A9	0x0AA3      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x03AA	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x03AB	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x03AC	0x2BA2      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x03AD	0x0008      	RETURN
; end of ___CC2DW
_increment_digit:
;DigitalClock.c,297 :: 		void increment_digit(unsigned char time, unsigned char digit) {
;DigitalClock.c,299 :: 		if(time == 2) {
0x03AE	0x1283      	BCF        STATUS, 5
0x03AF	0x1303      	BCF        STATUS, 6
0x03B0	0x082C      	MOVF       FARG_increment_digit_time, 0
0x03B1	0x3A02      	XORLW      2
0x03B2	0x1D03      	BTFSS      STATUS, 2
0x03B3	0x2CB6      	GOTO       L_increment_digit63
;DigitalClock.c,301 :: 		switch (digit) {
0x03B4	0x2CA4      	GOTO       L_increment_digit64
;DigitalClock.c,303 :: 		case 1: {
L_increment_digit66:
;DigitalClock.c,305 :: 		Soft_I2C_Start();
0x03B5	0x20CA      	CALL       _Soft_I2C_Start
;DigitalClock.c,306 :: 		Soft_I2C_Write(0xD0);
0x03B6	0x30D0      	MOVLW      208
0x03B7	0x1283      	BCF        STATUS, 5
0x03B8	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x03B9	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,307 :: 		Soft_I2C_Write(0x01);
0x03BA	0x3001      	MOVLW      1
0x03BB	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x03BC	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,309 :: 		(minutes & 0x0F) < 9 ? minutes + 0x01 : minutes & 0xF0);
0x03BD	0x300F      	MOVLW      15
0x03BE	0x0526      	ANDWF      _minutes, 0
0x03BF	0x00F1      	MOVWF      R1
0x03C0	0x3009      	MOVLW      9
0x03C1	0x0271      	SUBWF      R1, 0
0x03C2	0x1803      	BTFSC      STATUS, 0
0x03C3	0x2BCA      	GOTO       L_increment_digit67
0x03C4	0x0A26      	INCF       _minutes, 0
0x03C5	0x00F0      	MOVWF      R0
0x03C6	0x0870      	MOVF       R0, 0
0x03C7	0x00F1      	MOVWF      R1
0x03C8	0x01F2      	CLRF       R1+1
0x03C9	0x2BD0      	GOTO       L_increment_digit68
L_increment_digit67:
0x03CA	0x30F0      	MOVLW      240
0x03CB	0x0526      	ANDWF      _minutes, 0
0x03CC	0x00F0      	MOVWF      R0
0x03CD	0x0870      	MOVF       R0, 0
0x03CE	0x00F1      	MOVWF      R1
0x03CF	0x01F2      	CLRF       R1+1
L_increment_digit68:
0x03D0	0x0871      	MOVF       R1, 0
0x03D1	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x03D2	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,310 :: 		Soft_I2C_Stop();
0x03D3	0x22C8      	CALL       _Soft_I2C_Stop
;DigitalClock.c,312 :: 		break;
0x03D4	0x2CB6      	GOTO       L_increment_digit65
;DigitalClock.c,314 :: 		case 2: {
L_increment_digit69:
;DigitalClock.c,316 :: 		Soft_I2C_Start();
0x03D5	0x20CA      	CALL       _Soft_I2C_Start
;DigitalClock.c,317 :: 		Soft_I2C_Write(0xD0);
0x03D6	0x30D0      	MOVLW      208
0x03D7	0x1283      	BCF        STATUS, 5
0x03D8	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x03D9	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,318 :: 		Soft_I2C_Write(0x01);
0x03DA	0x3001      	MOVLW      1
0x03DB	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x03DC	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,319 :: 		Soft_I2C_Write(minutes >> 4 < 5 ? minutes + 0x10 : minutes & 0x0F);
0x03DD	0x0826      	MOVF       _minutes, 0
0x03DE	0x00F1      	MOVWF      R1
0x03DF	0x0CF1      	RRF        R1, 1
0x03E0	0x13F1      	BCF        R1, 7
0x03E1	0x0CF1      	RRF        R1, 1
0x03E2	0x13F1      	BCF        R1, 7
0x03E3	0x0CF1      	RRF        R1, 1
0x03E4	0x13F1      	BCF        R1, 7
0x03E5	0x0CF1      	RRF        R1, 1
0x03E6	0x13F1      	BCF        R1, 7
0x03E7	0x3005      	MOVLW      5
0x03E8	0x0271      	SUBWF      R1, 0
0x03E9	0x1803      	BTFSC      STATUS, 0
0x03EA	0x2BF2      	GOTO       L_increment_digit70
0x03EB	0x3010      	MOVLW      16
0x03EC	0x0726      	ADDWF      _minutes, 0
0x03ED	0x00F0      	MOVWF      R0
0x03EE	0x0870      	MOVF       R0, 0
0x03EF	0x00F1      	MOVWF      R1
0x03F0	0x01F2      	CLRF       R1+1
0x03F1	0x2BF8      	GOTO       L_increment_digit71
L_increment_digit70:
0x03F2	0x300F      	MOVLW      15
0x03F3	0x0526      	ANDWF      _minutes, 0
0x03F4	0x00F0      	MOVWF      R0
0x03F5	0x0870      	MOVF       R0, 0
0x03F6	0x00F1      	MOVWF      R1
0x03F7	0x01F2      	CLRF       R1+1
L_increment_digit71:
0x03F8	0x0871      	MOVF       R1, 0
0x03F9	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x03FA	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,320 :: 		Soft_I2C_Stop();
0x03FB	0x22C8      	CALL       _Soft_I2C_Stop
;DigitalClock.c,322 :: 		break;
0x03FC	0x2CB6      	GOTO       L_increment_digit65
;DigitalClock.c,324 :: 		case 3: {
L_increment_digit72:
;DigitalClock.c,326 :: 		Soft_I2C_Start();
0x03FD	0x20CA      	CALL       _Soft_I2C_Start
;DigitalClock.c,327 :: 		Soft_I2C_Write(0xD0);
0x03FE	0x30D0      	MOVLW      208
0x03FF	0x1283      	BCF        STATUS, 5
0x0400	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x0401	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,328 :: 		Soft_I2C_Write(0x02);
0x0402	0x3002      	MOVLW      2
0x0403	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x0404	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,330 :: 		(hours & 0x0F) < 3 ? hours + 0x01 :
0x0405	0x300F      	MOVLW      15
0x0406	0x0529      	ANDWF      _hours, 0
0x0407	0x00F1      	MOVWF      R1
0x0408	0x3003      	MOVLW      3
0x0409	0x0271      	SUBWF      R1, 0
0x040A	0x1803      	BTFSC      STATUS, 0
0x040B	0x2C17      	GOTO       L_increment_digit73
0x040C	0x0829      	MOVF       _hours, 0
0x040D	0x3E01      	ADDLW      1
0x040E	0x00F0      	MOVWF      R0
0x040F	0x01F1      	CLRF       R0+1
0x0410	0x1803      	BTFSC      STATUS, 0
0x0411	0x0AF1      	INCF       R0+1, 1
0x0412	0x0870      	MOVF       R0, 0
0x0413	0x00F5      	MOVWF      R5
0x0414	0x0871      	MOVF       R0+1, 0
0x0415	0x00F6      	MOVWF      R5+1
0x0416	0x2C47      	GOTO       L_increment_digit74
L_increment_digit73:
;DigitalClock.c,331 :: 		hours >> 4 == 2 ? hours & 0xF0 :
0x0417	0x0829      	MOVF       _hours, 0
0x0418	0x00F1      	MOVWF      R1
0x0419	0x0CF1      	RRF        R1, 1
0x041A	0x13F1      	BCF        R1, 7
0x041B	0x0CF1      	RRF        R1, 1
0x041C	0x13F1      	BCF        R1, 7
0x041D	0x0CF1      	RRF        R1, 1
0x041E	0x13F1      	BCF        R1, 7
0x041F	0x0CF1      	RRF        R1, 1
0x0420	0x13F1      	BCF        R1, 7
0x0421	0x0871      	MOVF       R1, 0
0x0422	0x3A02      	XORLW      2
0x0423	0x1D03      	BTFSS      STATUS, 2
0x0424	0x2C2C      	GOTO       L_increment_digit75
0x0425	0x30F0      	MOVLW      240
0x0426	0x0529      	ANDWF      _hours, 0
0x0427	0x00F0      	MOVWF      R0
0x0428	0x0870      	MOVF       R0, 0
0x0429	0x00F3      	MOVWF      R3
0x042A	0x01F4      	CLRF       R3+1
0x042B	0x2C43      	GOTO       L_increment_digit76
L_increment_digit75:
;DigitalClock.c,332 :: 		(hours & 0x0F) < 9 ? hours + 0x01 : hours & 0xF0);
0x042C	0x300F      	MOVLW      15
0x042D	0x0529      	ANDWF      _hours, 0
0x042E	0x00F1      	MOVWF      R1
0x042F	0x3009      	MOVLW      9
0x0430	0x0271      	SUBWF      R1, 0
0x0431	0x1803      	BTFSC      STATUS, 0
0x0432	0x2C39      	GOTO       L_increment_digit77
0x0433	0x0A29      	INCF       _hours, 0
0x0434	0x00F0      	MOVWF      R0
0x0435	0x0870      	MOVF       R0, 0
0x0436	0x00F1      	MOVWF      R1
0x0437	0x01F2      	CLRF       R1+1
0x0438	0x2C3F      	GOTO       L_increment_digit78
L_increment_digit77:
0x0439	0x30F0      	MOVLW      240
0x043A	0x0529      	ANDWF      _hours, 0
0x043B	0x00F0      	MOVWF      R0
0x043C	0x0870      	MOVF       R0, 0
0x043D	0x00F1      	MOVWF      R1
0x043E	0x01F2      	CLRF       R1+1
L_increment_digit78:
0x043F	0x0871      	MOVF       R1, 0
0x0440	0x00F3      	MOVWF      R3
0x0441	0x0872      	MOVF       R1+1, 0
0x0442	0x00F4      	MOVWF      R3+1
L_increment_digit76:
0x0443	0x0873      	MOVF       R3, 0
0x0444	0x00F5      	MOVWF      R5
0x0445	0x0874      	MOVF       R3+1, 0
0x0446	0x00F6      	MOVWF      R5+1
L_increment_digit74:
0x0447	0x0875      	MOVF       R5, 0
0x0448	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x0449	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,333 :: 		Soft_I2C_Stop();
0x044A	0x22C8      	CALL       _Soft_I2C_Stop
;DigitalClock.c,335 :: 		break;
0x044B	0x2CB6      	GOTO       L_increment_digit65
;DigitalClock.c,337 :: 		case 4: {
L_increment_digit79:
;DigitalClock.c,339 :: 		Soft_I2C_Start();
0x044C	0x20CA      	CALL       _Soft_I2C_Start
;DigitalClock.c,340 :: 		Soft_I2C_Write(0xD0);
0x044D	0x30D0      	MOVLW      208
0x044E	0x1283      	BCF        STATUS, 5
0x044F	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x0450	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,341 :: 		Soft_I2C_Write(0x02);
0x0451	0x3002      	MOVLW      2
0x0452	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x0453	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,343 :: 		hours >> 4 < 1 ? hours + 0x10 :
0x0454	0x0829      	MOVF       _hours, 0
0x0455	0x00F1      	MOVWF      R1
0x0456	0x0CF1      	RRF        R1, 1
0x0457	0x13F1      	BCF        R1, 7
0x0458	0x0CF1      	RRF        R1, 1
0x0459	0x13F1      	BCF        R1, 7
0x045A	0x0CF1      	RRF        R1, 1
0x045B	0x13F1      	BCF        R1, 7
0x045C	0x0CF1      	RRF        R1, 1
0x045D	0x13F1      	BCF        R1, 7
0x045E	0x3001      	MOVLW      1
0x045F	0x0271      	SUBWF      R1, 0
0x0460	0x1803      	BTFSC      STATUS, 0
0x0461	0x2C6D      	GOTO       L_increment_digit80
0x0462	0x3010      	MOVLW      16
0x0463	0x0729      	ADDWF      _hours, 0
0x0464	0x00F0      	MOVWF      R0
0x0465	0x01F1      	CLRF       R0+1
0x0466	0x1803      	BTFSC      STATUS, 0
0x0467	0x0AF1      	INCF       R0+1, 1
0x0468	0x0870      	MOVF       R0, 0
0x0469	0x00F5      	MOVWF      R5
0x046A	0x0871      	MOVF       R0+1, 0
0x046B	0x00F6      	MOVWF      R5+1
0x046C	0x2C9E      	GOTO       L_increment_digit81
L_increment_digit80:
;DigitalClock.c,344 :: 		(hours & 0x0F) > 3 ? hours & 0x0F :
0x046D	0x300F      	MOVLW      15
0x046E	0x0529      	ANDWF      _hours, 0
0x046F	0x00F1      	MOVWF      R1
0x0470	0x0871      	MOVF       R1, 0
0x0471	0x3C03      	SUBLW      3
0x0472	0x1803      	BTFSC      STATUS, 0
0x0473	0x2C7B      	GOTO       L_increment_digit82
0x0474	0x300F      	MOVLW      15
0x0475	0x0529      	ANDWF      _hours, 0
0x0476	0x00F0      	MOVWF      R0
0x0477	0x0870      	MOVF       R0, 0
0x0478	0x00F3      	MOVWF      R3
0x0479	0x01F4      	CLRF       R3+1
0x047A	0x2C9A      	GOTO       L_increment_digit83
L_increment_digit82:
;DigitalClock.c,345 :: 		hours >> 4 < 2 ? hours + 0x10 : hours & 0x0F);
0x047B	0x0829      	MOVF       _hours, 0
0x047C	0x00F1      	MOVWF      R1
0x047D	0x0CF1      	RRF        R1, 1
0x047E	0x13F1      	BCF        R1, 7
0x047F	0x0CF1      	RRF        R1, 1
0x0480	0x13F1      	BCF        R1, 7
0x0481	0x0CF1      	RRF        R1, 1
0x0482	0x13F1      	BCF        R1, 7
0x0483	0x0CF1      	RRF        R1, 1
0x0484	0x13F1      	BCF        R1, 7
0x0485	0x3002      	MOVLW      2
0x0486	0x0271      	SUBWF      R1, 0
0x0487	0x1803      	BTFSC      STATUS, 0
0x0488	0x2C90      	GOTO       L_increment_digit84
0x0489	0x3010      	MOVLW      16
0x048A	0x0729      	ADDWF      _hours, 0
0x048B	0x00F0      	MOVWF      R0
0x048C	0x0870      	MOVF       R0, 0
0x048D	0x00F1      	MOVWF      R1
0x048E	0x01F2      	CLRF       R1+1
0x048F	0x2C96      	GOTO       L_increment_digit85
L_increment_digit84:
0x0490	0x300F      	MOVLW      15
0x0491	0x0529      	ANDWF      _hours, 0
0x0492	0x00F0      	MOVWF      R0
0x0493	0x0870      	MOVF       R0, 0
0x0494	0x00F1      	MOVWF      R1
0x0495	0x01F2      	CLRF       R1+1
L_increment_digit85:
0x0496	0x0871      	MOVF       R1, 0
0x0497	0x00F3      	MOVWF      R3
0x0498	0x0872      	MOVF       R1+1, 0
0x0499	0x00F4      	MOVWF      R3+1
L_increment_digit83:
0x049A	0x0873      	MOVF       R3, 0
0x049B	0x00F5      	MOVWF      R5
0x049C	0x0874      	MOVF       R3+1, 0
0x049D	0x00F6      	MOVWF      R5+1
L_increment_digit81:
0x049E	0x0875      	MOVF       R5, 0
0x049F	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x04A0	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,346 :: 		Soft_I2C_Stop();
0x04A1	0x22C8      	CALL       _Soft_I2C_Stop
;DigitalClock.c,348 :: 		break;
0x04A2	0x2CB6      	GOTO       L_increment_digit65
;DigitalClock.c,350 :: 		default: {
L_increment_digit86:
;DigitalClock.c,352 :: 		break;
0x04A3	0x2CB6      	GOTO       L_increment_digit65
;DigitalClock.c,355 :: 		}
L_increment_digit64:
0x04A4	0x1283      	BCF        STATUS, 5
0x04A5	0x082D      	MOVF       FARG_increment_digit_digit, 0
0x04A6	0x3A01      	XORLW      1
0x04A7	0x1903      	BTFSC      STATUS, 2
0x04A8	0x2BB5      	GOTO       L_increment_digit66
0x04A9	0x082D      	MOVF       FARG_increment_digit_digit, 0
0x04AA	0x3A02      	XORLW      2
0x04AB	0x1903      	BTFSC      STATUS, 2
0x04AC	0x2BD5      	GOTO       L_increment_digit69
0x04AD	0x082D      	MOVF       FARG_increment_digit_digit, 0
0x04AE	0x3A03      	XORLW      3
0x04AF	0x1903      	BTFSC      STATUS, 2
0x04B0	0x2BFD      	GOTO       L_increment_digit72
0x04B1	0x082D      	MOVF       FARG_increment_digit_digit, 0
0x04B2	0x3A04      	XORLW      4
0x04B3	0x1903      	BTFSC      STATUS, 2
0x04B4	0x2C4C      	GOTO       L_increment_digit79
0x04B5	0x2CA3      	GOTO       L_increment_digit86
L_increment_digit65:
;DigitalClock.c,357 :: 		}
L_increment_digit63:
;DigitalClock.c,358 :: 		}
L_end_increment_digit:
0x04B6	0x0008      	RETURN
; end of _increment_digit
_read_time:
;DigitalClock.c,201 :: 		void read_time(unsigned char select) {
;DigitalClock.c,203 :: 		switch (select) {
0x04B7	0x2D4E      	GOTO       L_read_time53
;DigitalClock.c,206 :: 		case 1: {
L_read_time55:
;DigitalClock.c,208 :: 		flash_seg(select);
0x04B8	0x1283      	BCF        STATUS, 5
0x04B9	0x1303      	BCF        STATUS, 6
0x04BA	0x082C      	MOVF       FARG_read_time_select, 0
0x04BB	0x00AE      	MOVWF      FARG_flash_seg_select
0x04BC	0x20DB      	CALL       _flash_seg
;DigitalClock.c,210 :: 		Soft_I2C_Start();
0x04BD	0x20CA      	CALL       _Soft_I2C_Start
;DigitalClock.c,211 :: 		Soft_I2C_Write(0xD0);
0x04BE	0x30D0      	MOVLW      208
0x04BF	0x1283      	BCF        STATUS, 5
0x04C0	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x04C1	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,213 :: 		flash_seg(select);
0x04C2	0x082C      	MOVF       FARG_read_time_select, 0
0x04C3	0x00AE      	MOVWF      FARG_flash_seg_select
0x04C4	0x20DB      	CALL       _flash_seg
;DigitalClock.c,215 :: 		Soft_I2C_Write(0x00);
0x04C5	0x01AE      	CLRF       FARG_Soft_I2C_Write_data_
0x04C6	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,217 :: 		flash_seg(select);
0x04C7	0x082C      	MOVF       FARG_read_time_select, 0
0x04C8	0x00AE      	MOVWF      FARG_flash_seg_select
0x04C9	0x20DB      	CALL       _flash_seg
;DigitalClock.c,219 :: 		Soft_I2C_Start();
0x04CA	0x20CA      	CALL       _Soft_I2C_Start
;DigitalClock.c,220 :: 		Soft_I2C_Write(0xD1);
0x04CB	0x30D1      	MOVLW      209
0x04CC	0x1283      	BCF        STATUS, 5
0x04CD	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x04CE	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,222 :: 		flash_seg(select);
0x04CF	0x082C      	MOVF       FARG_read_time_select, 0
0x04D0	0x00AE      	MOVWF      FARG_flash_seg_select
0x04D1	0x20DB      	CALL       _flash_seg
;DigitalClock.c,224 :: 		sec = Soft_I2C_Read(0);
0x04D2	0x01AE      	CLRF       FARG_Soft_I2C_Read_ack
0x04D3	0x01AF      	CLRF       FARG_Soft_I2C_Read_ack+1
0x04D4	0x22E3      	CALL       _Soft_I2C_Read
0x04D5	0x0870      	MOVF       R0, 0
0x04D6	0x00A1      	MOVWF      _sec
;DigitalClock.c,226 :: 		flash_seg(select);
0x04D7	0x082C      	MOVF       FARG_read_time_select, 0
0x04D8	0x00AE      	MOVWF      FARG_flash_seg_select
0x04D9	0x20DB      	CALL       _flash_seg
;DigitalClock.c,228 :: 		Soft_I2C_Stop();
0x04DA	0x22C8      	CALL       _Soft_I2C_Stop
;DigitalClock.c,230 :: 		flash_seg(select);
0x04DB	0x1283      	BCF        STATUS, 5
0x04DC	0x082C      	MOVF       FARG_read_time_select, 0
0x04DD	0x00AE      	MOVWF      FARG_flash_seg_select
0x04DE	0x20DB      	CALL       _flash_seg
;DigitalClock.c,232 :: 		break;
0x04DF	0x2D59      	GOTO       L_read_time54
;DigitalClock.c,236 :: 		case 2: {
L_read_time56:
;DigitalClock.c,238 :: 		flash_seg(select);
0x04E0	0x082C      	MOVF       FARG_read_time_select, 0
0x04E1	0x00AE      	MOVWF      FARG_flash_seg_select
0x04E2	0x20DB      	CALL       _flash_seg
;DigitalClock.c,240 :: 		Soft_I2C_Start();
0x04E3	0x20CA      	CALL       _Soft_I2C_Start
;DigitalClock.c,241 :: 		Soft_I2C_Write(0xD0);
0x04E4	0x30D0      	MOVLW      208
0x04E5	0x1283      	BCF        STATUS, 5
0x04E6	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x04E7	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,243 :: 		flash_seg(select);
0x04E8	0x082C      	MOVF       FARG_read_time_select, 0
0x04E9	0x00AE      	MOVWF      FARG_flash_seg_select
0x04EA	0x20DB      	CALL       _flash_seg
;DigitalClock.c,245 :: 		Soft_I2C_Write(0x01);
0x04EB	0x3001      	MOVLW      1
0x04EC	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x04ED	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,247 :: 		flash_seg(select);
0x04EE	0x082C      	MOVF       FARG_read_time_select, 0
0x04EF	0x00AE      	MOVWF      FARG_flash_seg_select
0x04F0	0x20DB      	CALL       _flash_seg
;DigitalClock.c,249 :: 		Soft_I2C_Start();
0x04F1	0x20CA      	CALL       _Soft_I2C_Start
;DigitalClock.c,250 :: 		Soft_I2C_Write(0xD1);
0x04F2	0x30D1      	MOVLW      209
0x04F3	0x1283      	BCF        STATUS, 5
0x04F4	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x04F5	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,252 :: 		flash_seg(select);
0x04F6	0x082C      	MOVF       FARG_read_time_select, 0
0x04F7	0x00AE      	MOVWF      FARG_flash_seg_select
0x04F8	0x20DB      	CALL       _flash_seg
;DigitalClock.c,254 :: 		minutes = Soft_I2C_Read(1);
0x04F9	0x3001      	MOVLW      1
0x04FA	0x00AE      	MOVWF      FARG_Soft_I2C_Read_ack
0x04FB	0x3000      	MOVLW      0
0x04FC	0x00AF      	MOVWF      FARG_Soft_I2C_Read_ack+1
0x04FD	0x22E3      	CALL       _Soft_I2C_Read
0x04FE	0x0870      	MOVF       R0, 0
0x04FF	0x00A6      	MOVWF      _minutes
;DigitalClock.c,255 :: 		hours = Soft_I2C_Read(0);
0x0500	0x01AE      	CLRF       FARG_Soft_I2C_Read_ack
0x0501	0x01AF      	CLRF       FARG_Soft_I2C_Read_ack+1
0x0502	0x22E3      	CALL       _Soft_I2C_Read
0x0503	0x0870      	MOVF       R0, 0
0x0504	0x00A9      	MOVWF      _hours
;DigitalClock.c,257 :: 		flash_seg(select);
0x0505	0x082C      	MOVF       FARG_read_time_select, 0
0x0506	0x00AE      	MOVWF      FARG_flash_seg_select
0x0507	0x20DB      	CALL       _flash_seg
;DigitalClock.c,259 :: 		Soft_I2C_Stop();
0x0508	0x22C8      	CALL       _Soft_I2C_Stop
;DigitalClock.c,261 :: 		flash_seg(select);
0x0509	0x1283      	BCF        STATUS, 5
0x050A	0x082C      	MOVF       FARG_read_time_select, 0
0x050B	0x00AE      	MOVWF      FARG_flash_seg_select
0x050C	0x20DB      	CALL       _flash_seg
;DigitalClock.c,263 :: 		break;
0x050D	0x2D59      	GOTO       L_read_time54
;DigitalClock.c,266 :: 		default: {
L_read_time57:
;DigitalClock.c,268 :: 		flash_seg(select);
0x050E	0x082C      	MOVF       FARG_read_time_select, 0
0x050F	0x00AE      	MOVWF      FARG_flash_seg_select
0x0510	0x20DB      	CALL       _flash_seg
;DigitalClock.c,270 :: 		Delay_us(400);
0x0511	0x3002      	MOVLW      2
0x0512	0x00FC      	MOVWF      R12
0x0513	0x3008      	MOVLW      8
0x0514	0x00FD      	MOVWF      R13
L_read_time58:
0x0515	0x0BFD      	DECFSZ     R13, 1
0x0516	0x2D15      	GOTO       L_read_time58
0x0517	0x0BFC      	DECFSZ     R12, 1
0x0518	0x2D15      	GOTO       L_read_time58
0x0519	0x0000      	NOP
;DigitalClock.c,272 :: 		flash_seg(select);
0x051A	0x082C      	MOVF       FARG_read_time_select, 0
0x051B	0x00AE      	MOVWF      FARG_flash_seg_select
0x051C	0x20DB      	CALL       _flash_seg
;DigitalClock.c,274 :: 		Delay_us(400);
0x051D	0x3002      	MOVLW      2
0x051E	0x00FC      	MOVWF      R12
0x051F	0x3008      	MOVLW      8
0x0520	0x00FD      	MOVWF      R13
L_read_time59:
0x0521	0x0BFD      	DECFSZ     R13, 1
0x0522	0x2D21      	GOTO       L_read_time59
0x0523	0x0BFC      	DECFSZ     R12, 1
0x0524	0x2D21      	GOTO       L_read_time59
0x0525	0x0000      	NOP
;DigitalClock.c,276 :: 		flash_seg(select);
0x0526	0x082C      	MOVF       FARG_read_time_select, 0
0x0527	0x00AE      	MOVWF      FARG_flash_seg_select
0x0528	0x20DB      	CALL       _flash_seg
;DigitalClock.c,278 :: 		Delay_us(400);
0x0529	0x3002      	MOVLW      2
0x052A	0x00FC      	MOVWF      R12
0x052B	0x3008      	MOVLW      8
0x052C	0x00FD      	MOVWF      R13
L_read_time60:
0x052D	0x0BFD      	DECFSZ     R13, 1
0x052E	0x2D2D      	GOTO       L_read_time60
0x052F	0x0BFC      	DECFSZ     R12, 1
0x0530	0x2D2D      	GOTO       L_read_time60
0x0531	0x0000      	NOP
;DigitalClock.c,280 :: 		flash_seg(select);
0x0532	0x082C      	MOVF       FARG_read_time_select, 0
0x0533	0x00AE      	MOVWF      FARG_flash_seg_select
0x0534	0x20DB      	CALL       _flash_seg
;DigitalClock.c,282 :: 		Delay_us(400);
0x0535	0x3002      	MOVLW      2
0x0536	0x00FC      	MOVWF      R12
0x0537	0x3008      	MOVLW      8
0x0538	0x00FD      	MOVWF      R13
L_read_time61:
0x0539	0x0BFD      	DECFSZ     R13, 1
0x053A	0x2D39      	GOTO       L_read_time61
0x053B	0x0BFC      	DECFSZ     R12, 1
0x053C	0x2D39      	GOTO       L_read_time61
0x053D	0x0000      	NOP
;DigitalClock.c,284 :: 		flash_seg(select);
0x053E	0x082C      	MOVF       FARG_read_time_select, 0
0x053F	0x00AE      	MOVWF      FARG_flash_seg_select
0x0540	0x20DB      	CALL       _flash_seg
;DigitalClock.c,286 :: 		Delay_us(400);
0x0541	0x3002      	MOVLW      2
0x0542	0x00FC      	MOVWF      R12
0x0543	0x3008      	MOVLW      8
0x0544	0x00FD      	MOVWF      R13
L_read_time62:
0x0545	0x0BFD      	DECFSZ     R13, 1
0x0546	0x2D45      	GOTO       L_read_time62
0x0547	0x0BFC      	DECFSZ     R12, 1
0x0548	0x2D45      	GOTO       L_read_time62
0x0549	0x0000      	NOP
;DigitalClock.c,288 :: 		flash_seg(select);
0x054A	0x082C      	MOVF       FARG_read_time_select, 0
0x054B	0x00AE      	MOVWF      FARG_flash_seg_select
0x054C	0x20DB      	CALL       _flash_seg
;DigitalClock.c,290 :: 		break;
0x054D	0x2D59      	GOTO       L_read_time54
;DigitalClock.c,294 :: 		}
L_read_time53:
0x054E	0x1283      	BCF        STATUS, 5
0x054F	0x1303      	BCF        STATUS, 6
0x0550	0x082C      	MOVF       FARG_read_time_select, 0
0x0551	0x3A01      	XORLW      1
0x0552	0x1903      	BTFSC      STATUS, 2
0x0553	0x2CB8      	GOTO       L_read_time55
0x0554	0x082C      	MOVF       FARG_read_time_select, 0
0x0555	0x3A02      	XORLW      2
0x0556	0x1903      	BTFSC      STATUS, 2
0x0557	0x2CE0      	GOTO       L_read_time56
0x0558	0x2D0E      	GOTO       L_read_time57
L_read_time54:
;DigitalClock.c,295 :: 		}
L_end_read_time:
0x0559	0x0008      	RETURN
; end of _read_time
_Soft_I2C_Init:
;__Lib_SoftI2C.c,69 :: 		
;__Lib_SoftI2C.c,75 :: 		
0x055A	0x1683      	BSF        STATUS, 5
0x055B	0x1303      	BCF        STATUS, 6
0x055C	0x1685      	BSF        Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0)
;__Lib_SoftI2C.c,76 :: 		
0x055D	0x1605      	BSF        Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0)
;__Lib_SoftI2C.c,78 :: 		
0x055E	0x1283      	BCF        STATUS, 5
0x055F	0x11A4      	BCF        __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0)
;__Lib_SoftI2C.c,79 :: 		
L_Soft_I2C_Init0:
0x0560	0x1A85      	BTFSC      Soft_I2C_Scl, BitPos(Soft_I2C_Scl+0)
0x0561	0x2D66      	GOTO       L_Soft_I2C_Init1
;__Lib_SoftI2C.c,80 :: 		
0x0562	0x1DA4      	BTFSS      __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0)
0x0563	0x2D65      	GOTO       L_Soft_I2C_Init2
;__Lib_SoftI2C.c,81 :: 		
0x0564	0x2D66      	GOTO       L_Soft_I2C_Init1
L_Soft_I2C_Init2:
0x0565	0x2D60      	GOTO       L_Soft_I2C_Init0
L_Soft_I2C_Init1:
;__Lib_SoftI2C.c,83 :: 		
L_end_Soft_I2C_Init:
0x0566	0x0008      	RETURN
; end of _Soft_I2C_Init
_main:
;DigitalClock.c,360 :: 		void main(void) {
;DigitalClock.c,363 :: 		TRISA = 0x06;
0x0567	0x3006      	MOVLW      6
0x0568	0x1683      	BSF        STATUS, 5
0x0569	0x1303      	BCF        STATUS, 6
0x056A	0x0085      	MOVWF      TRISA
;DigitalClock.c,366 :: 		TRISB = 0x00;
0x056B	0x0186      	CLRF       TRISB
;DigitalClock.c,369 :: 		TRISC = 0x00;
0x056C	0x0187      	CLRF       TRISC
;DigitalClock.c,372 :: 		ANSEL = 0x00;
0x056D	0x1283      	BCF        STATUS, 5
0x056E	0x1703      	BSF        STATUS, 6
0x056F	0x019E      	CLRF       ANSEL
;DigitalClock.c,373 :: 		ANSELH = 0x00;
0x0570	0x019F      	CLRF       ANSELH
;DigitalClock.c,376 :: 		WPUA = 0x00;
0x0571	0x1683      	BSF        STATUS, 5
0x0572	0x1303      	BCF        STATUS, 6
0x0573	0x0195      	CLRF       WPUA
;DigitalClock.c,379 :: 		IOCA = 0x02;
0x0574	0x3002      	MOVLW      2
0x0575	0x0096      	MOVWF      IOCA
;DigitalClock.c,382 :: 		Soft_I2C_Init();
0x0576	0x255A      	CALL       _Soft_I2C_Init
;DigitalClock.c,385 :: 		Soft_I2C_Start();
0x0577	0x20CA      	CALL       _Soft_I2C_Start
;DigitalClock.c,386 :: 		Soft_I2C_Write(0xD0);
0x0578	0x30D0      	MOVLW      208
0x0579	0x1283      	BCF        STATUS, 5
0x057A	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x057B	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,387 :: 		Soft_I2C_Write(0x07);
0x057C	0x3007      	MOVLW      7
0x057D	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x057E	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,388 :: 		Soft_I2C_Write(0x80);
0x057F	0x3080      	MOVLW      128
0x0580	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x0581	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,389 :: 		Soft_I2C_Stop();
0x0582	0x22C8      	CALL       _Soft_I2C_Stop
;DigitalClock.c,392 :: 		Soft_I2C_Start();
0x0583	0x20CA      	CALL       _Soft_I2C_Start
;DigitalClock.c,393 :: 		Soft_I2C_Write(0xD0);
0x0584	0x30D0      	MOVLW      208
0x0585	0x1283      	BCF        STATUS, 5
0x0586	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x0587	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,394 :: 		Soft_I2C_Write(0x00);
0x0588	0x01AE      	CLRF       FARG_Soft_I2C_Write_data_
0x0589	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,395 :: 		Soft_I2C_Write(0x00);
0x058A	0x01AE      	CLRF       FARG_Soft_I2C_Write_data_
0x058B	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,396 :: 		Soft_I2C_Stop();
0x058C	0x22C8      	CALL       _Soft_I2C_Stop
;DigitalClock.c,399 :: 		Soft_I2C_Start();
0x058D	0x20CA      	CALL       _Soft_I2C_Start
;DigitalClock.c,400 :: 		Soft_I2C_Write(0xD0);
0x058E	0x30D0      	MOVLW      208
0x058F	0x1283      	BCF        STATUS, 5
0x0590	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x0591	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,401 :: 		Soft_I2C_Write(0x07);
0x0592	0x3007      	MOVLW      7
0x0593	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x0594	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,402 :: 		Soft_I2C_Write(0x10);
0x0595	0x3010      	MOVLW      16
0x0596	0x00AE      	MOVWF      FARG_Soft_I2C_Write_data_
0x0597	0x2334      	CALL       _Soft_I2C_Write
;DigitalClock.c,403 :: 		Soft_I2C_Stop();
0x0598	0x22C8      	CALL       _Soft_I2C_Stop
;DigitalClock.c,406 :: 		time_select = 1;
0x0599	0x3001      	MOVLW      1
0x059A	0x1283      	BCF        STATUS, 5
0x059B	0x00A8      	MOVWF      _time_select
;DigitalClock.c,407 :: 		digit_select = 0;
0x059C	0x01A7      	CLRF       _digit_select
;DigitalClock.c,408 :: 		delay_counter = 0;
0x059D	0x01A5      	CLRF       _delay_counter
;DigitalClock.c,409 :: 		delay_flag = 0;
0x059E	0x10A4      	BCF        _delay_flag, BitPos(_delay_flag+0)
;DigitalClock.c,410 :: 		increment_flag = 0;
0x059F	0x1024      	BCF        _increment_flag, BitPos(_increment_flag+0)
;DigitalClock.c,413 :: 		PORTC = 0x00;
0x05A0	0x0187      	CLRF       PORTC
;DigitalClock.c,414 :: 		PORTB = 0xFF;
0x05A1	0x30FF      	MOVLW      255
0x05A2	0x0086      	MOVWF      PORTB
;DigitalClock.c,417 :: 		INTCON = 0x98;
0x05A3	0x3098      	MOVLW      152
0x05A4	0x008B      	MOVWF      INTCON
;DigitalClock.c,419 :: 		while (1) {
L_main87:
;DigitalClock.c,421 :: 		read_time(time_select);
0x05A5	0x0828      	MOVF       _time_select, 0
0x05A6	0x00AC      	MOVWF      FARG_read_time_select
0x05A7	0x24B7      	CALL       _read_time
;DigitalClock.c,424 :: 		if (increment_flag) {
0x05A8	0x1C24      	BTFSS      _increment_flag, BitPos(_increment_flag+0)
0x05A9	0x2DB2      	GOTO       L_main89
;DigitalClock.c,426 :: 		increment_digit(time_select, digit_select);
0x05AA	0x0828      	MOVF       _time_select, 0
0x05AB	0x00AC      	MOVWF      FARG_increment_digit_time
0x05AC	0x0827      	MOVF       _digit_select, 0
0x05AD	0x00AD      	MOVWF      FARG_increment_digit_digit
0x05AE	0x23AE      	CALL       _increment_digit
;DigitalClock.c,429 :: 		increment_flag = 0;
0x05AF	0x1283      	BCF        STATUS, 5
0x05B0	0x1303      	BCF        STATUS, 6
0x05B1	0x1024      	BCF        _increment_flag, BitPos(_increment_flag+0)
;DigitalClock.c,431 :: 		}
L_main89:
;DigitalClock.c,433 :: 		if (delay_flag) {
0x05B2	0x1CA4      	BTFSS      _delay_flag, BitPos(_delay_flag+0)
0x05B3	0x2DBD      	GOTO       L_main90
;DigitalClock.c,435 :: 		delay_counter++;
0x05B4	0x0AA5      	INCF       _delay_counter, 1
;DigitalClock.c,438 :: 		if (delay_counter == 0x80) {
0x05B5	0x0825      	MOVF       _delay_counter, 0
0x05B6	0x3A80      	XORLW      128
0x05B7	0x1D03      	BTFSS      STATUS, 2
0x05B8	0x2DBD      	GOTO       L_main91
;DigitalClock.c,441 :: 		delay_counter = 0x00;
0x05B9	0x01A5      	CLRF       _delay_counter
;DigitalClock.c,444 :: 		delay_flag = 0;
0x05BA	0x10A4      	BCF        _delay_flag, BitPos(_delay_flag+0)
;DigitalClock.c,447 :: 		INTCON = 0x98;
0x05BB	0x3098      	MOVLW      152
0x05BC	0x008B      	MOVWF      INTCON
;DigitalClock.c,448 :: 		}
L_main91:
;DigitalClock.c,450 :: 		}
L_main90:
;DigitalClock.c,451 :: 		}
0x05BD	0x2DA5      	GOTO       L_main87
;DigitalClock.c,453 :: 		}
L_end_main:
0x05BE	0x2DBE      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [58]    _interrupt
0x003E     [115]    _bcd_to_seg
0x00B1       [3]    _Delay_1us
0x00B4      [11]    __Lib_SoftI2C_PutZerosToLATSda
0x00BF      [11]    __Lib_SoftI2C_PutZerosToLATScl
0x00CA      [17]    _Soft_I2C_Start
0x00DB     [486]    _flash_seg
0x02C1       [7]    _____DoICP
0x02C8      [27]    _Soft_I2C_Stop
0x02E3      [81]    _Soft_I2C_Read
0x0334     [110]    _Soft_I2C_Write
0x03A2      [12]    ___CC2DW
0x03AE     [265]    _increment_digit
0x04B7     [163]    _read_time
0x055A      [13]    _Soft_I2C_Init
0x0567      [88]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0005       [0]    RA4_bit
0x0005       [0]    Soft_I2C_Scl
0x0005       [0]    Soft_I2C_Sda
0x0005       [0]    RA5_bit
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x0021       [1]    _sec
0x0022       [2]    ___DoICPAddr
0x0024       [0]    _delay_flag
0x0024       [0]    _dummy_bit
0x0024       [0]    __Lib_SoftI2C___StopWaiting
0x0024       [0]    _increment_flag
0x0025       [1]    _delay_counter
0x0026       [1]    _minutes
0x0027       [1]    _digit_select
0x0028       [1]    _time_select
0x0029       [1]    _hours
0x002A       [1]    ___saveSTATUS
0x002B       [1]    ___savePCLATH
0x002C       [1]    FARG_read_time_select
0x002C       [1]    FARG_increment_digit_time
0x002D       [1]    FARG_increment_digit_digit
0x002E       [1]    FARG_Soft_I2C_Write_data_
0x002E       [1]    FARG_flash_seg_select
0x002E       [2]    FARG_Soft_I2C_Read_ack
0x002F       [1]    FLOC__flash_seg
0x002F       [2]    Soft_I2C_Write_temp_L0
0x0030       [2]    Soft_I2C_Read_result_L0
0x0031       [2]    Soft_I2C_Write_result_L0
0x0032       [2]    Soft_I2C_Read_temp_L0
0x0034       [1]    FARG_bcd_to_seg_bcd
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [0]    Soft_I2C_Sda_Direction
0x0085       [0]    Soft_I2C_Scl_Direction
0x0085       [0]    TRISA5_bit
0x0085       [1]    TRISA
0x0085       [0]    TRISA4_bit
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0095       [1]    WPUA
0x0096       [1]    IOCA
0x011E       [1]    ANSEL
0x011F       [1]    ANSELH
//** Label List: ** 
//----------------------------------------------
  L_bcd_to_seg0
  L_bcd_to_seg1
  L_bcd_to_seg2
  L_bcd_to_seg3
  L_bcd_to_seg4
  L_bcd_to_seg5
  L_bcd_to_seg6
  L_bcd_to_seg7
  L_bcd_to_seg8
  L_bcd_to_seg9
  L_bcd_to_seg10
  L_bcd_to_seg11
  L_bcd_to_seg12
  L_bcd_to_seg13
  L_bcd_to_seg14
  L_bcd_to_seg15
  L_bcd_to_seg16
  L_bcd_to_seg17
  L_flash_seg18
  L_flash_seg19
  L_flash_seg20
  L_flash_seg21
  L_flash_seg22
  L_flash_seg23
  L_flash_seg24
  L_flash_seg25
  L_flash_seg26
  L_flash_seg27
  L_flash_seg28
  L_flash_seg29
  L_flash_seg30
  L_flash_seg31
  L_flash_seg32
  L_flash_seg33
  L_flash_seg34
  L_flash_seg35
  L_flash_seg36
  L_flash_seg37
  L_flash_seg38
  L_flash_seg39
  L_flash_seg40
  L_flash_seg41
  L_flash_seg42
  L_flash_seg43
  L_flash_seg44
  L_flash_seg45
  L_flash_seg46
  L_flash_seg47
  L_flash_seg48
  L_flash_seg49
  L_flash_seg50
  L_flash_seg51
  L_flash_seg52
  L_read_time53
  L_read_time54
  L_read_time55
  L_read_time56
  L_read_time57
  L_read_time58
  L_read_time59
  L_read_time60
  L_read_time61
  L_read_time62
  L_increment_digit63
  L_increment_digit64
  L_increment_digit65
  L_increment_digit66
  L_increment_digit67
  L_increment_digit68
  L_increment_digit69
  L_increment_digit70
  L_increment_digit71
  L_increment_digit72
  L_increment_digit73
  L_increment_digit74
  L_increment_digit75
  L_increment_digit76
  L_increment_digit77
  L_increment_digit78
  L_increment_digit79
  L_increment_digit80
  L_increment_digit81
  L_increment_digit82
  L_increment_digit83
  L_increment_digit84
  L_increment_digit85
  L_increment_digit86
  L_main87
  L_main88
  L_main89
  L_main90
  L_main91
  L_interrupt92
  L_interrupt93
  L_interrupt94
  L_interrupt95
  L_interrupt96
  L_interrupt97
  L_interrupt98
  L_interrupt99
  L_interrupt100
  L__interrupt101
  L_end_bcd_to_seg
  _bcd_to_seg
  L_end_flash_seg
  _flash_seg
  L_end_read_time
  _read_time
  L_end_increment_digit
  _increment_digit
  L_end_main
  _main
  L_end_interrupt
  _interrupt
  L__interrupt108
  L__interrupt109
  L__interrupt110
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_1ms6
  L_Delay_5ms7
  L_Delay_8ms8
  L_Delay_10ms9
  L_Delay_100ms10
  L_Delay_1sec11
  L_boot16_Delay_5ms12
  L_Delay_Cyc13
  L_Delay_Cyc14
  L_VDelay_ms15
  L_VDelay_ms16
  L_VDelay_ms17
  L_VDelay_Advanced_ms18
  L_VDelay_Advanced_ms19
  L_VDelay_Advanced_ms20
  L_end_Get_Fosc_kHz
  _Get_Fosc_kHz
  L_end_Delay_1us
  _Delay_1us
  L_end_Delay_10us
  _Delay_10us
  L_end_Delay_22us
  _Delay_22us
  L_end_Delay_50us
  _Delay_50us
  L_end_Delay_80us
  _Delay_80us
  L_end_Delay_500us
  _Delay_500us
  L_end_Delay_5500us
  _Delay_5500us
  L_end_Delay_1ms
  _Delay_1ms
  L_end_Delay_5ms
  _Delay_5ms
  L_end_Delay_8ms
  _Delay_8ms
  L_end_Delay_10ms
  _Delay_10ms
  L_end_Delay_100ms
  _Delay_100ms
  L_end_Delay_1sec
  _Delay_1sec
  L_end_boot16_Delay_5ms
  _boot16_Delay_5ms
  L_end_Delay_Cyc
  _Delay_Cyc
  L_end_VDelay_ms
  _VDelay_ms
  L__VDelay_ms38
  L__VDelay_ms39
  L__VDelay_ms40
  L_end_VDelay_Advanced_ms
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms42
  L__VDelay_Advanced_ms43
  L__VDelay_Advanced_ms44
  L_Soft_I2C_Init0
  L_Soft_I2C_Init1
  L_Soft_I2C_Init2
  L_Soft_I2C_Read3
  L_Soft_I2C_Read4
  L_Soft_I2C_Read5
  L_Soft_I2C_Read6
  L_Soft_I2C_Read7
  L_Soft_I2C_Read8
  L_Soft_I2C_Read9
  L_Soft_I2C_Read10
  L_Soft_I2C_Read11
  L_Soft_I2C_Read12
  L_Soft_I2C_Stop13
  L_Soft_I2C_Stop14
  L_Soft_I2C_Stop15
  L_Soft_I2C_Write16
  L_Soft_I2C_Write17
  L_Soft_I2C_Write18
  L_Soft_I2C_Write19
  L_Soft_I2C_Write20
  L_Soft_I2C_Write21
  L_Soft_I2C_Write22
  L_Soft_I2C_Write23
  L_Soft_I2C_Write24
  L_Soft_I2C_Write25
  L_Soft_I2C_Write26
  L_end_PutZerosToLATSda
  __Lib_SoftI2C_PutZerosToLATSda
  L_end_PutZerosToLATScl
  __Lib_SoftI2C_PutZerosToLATScl
  L_end_Soft_I2C_Break
  _Soft_I2C_Break
  L_end_Soft_I2C_Init
  _Soft_I2C_Init
  L_end_Soft_I2C_Read
  _Soft_I2C_Read
  L_end_Soft_I2C_Start
  _Soft_I2C_Start
  L_end_Soft_I2C_Stop
  _Soft_I2C_Stop
  L_end_Soft_I2C_Write
  _Soft_I2C_Write
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_bcd_to_seg0
  L_bcd_to_seg1
  L_bcd_to_seg2
  L_bcd_to_seg3
  L_bcd_to_seg4
  L_bcd_to_seg5
  L_bcd_to_seg6
  L_bcd_to_seg7
  L_bcd_to_seg8
  L_bcd_to_seg9
  L_bcd_to_seg10
  L_bcd_to_seg11
  L_bcd_to_seg12
  L_bcd_to_seg13
  L_bcd_to_seg14
  L_bcd_to_seg15
  L_bcd_to_seg16
  L_bcd_to_seg17
  L_flash_seg18
  L_flash_seg19
  L_flash_seg20
  L_flash_seg21
  L_flash_seg22
  L_flash_seg23
  L_flash_seg24
  L_flash_seg25
  L_flash_seg26
  L_flash_seg27
  L_flash_seg28
  L_flash_seg29
  L_flash_seg30
  L_flash_seg31
  L_flash_seg32
  L_flash_seg33
  L_flash_seg34
  L_flash_seg35
  L_flash_seg36
  L_flash_seg37
  L_flash_seg38
  L_flash_seg39
  L_flash_seg40
  L_flash_seg41
  L_flash_seg42
  L_flash_seg43
  L_flash_seg44
  L_flash_seg45
  L_flash_seg46
  L_flash_seg47
  L_flash_seg48
  L_flash_seg49
  L_flash_seg50
  L_flash_seg51
  L_flash_seg52
  L_read_time53
  L_read_time54
  L_read_time55
  L_read_time56
  L_read_time57
  L_read_time58
  L_read_time59
  L_read_time60
  L_read_time61
  L_read_time62
  L_increment_digit63
  L_increment_digit64
  L_increment_digit65
  L_increment_digit66
  L_increment_digit67
  L_increment_digit68
  L_increment_digit69
  L_increment_digit70
  L_increment_digit71
  L_increment_digit72
  L_increment_digit73
  L_increment_digit74
  L_increment_digit75
  L_increment_digit76
  L_increment_digit77
  L_increment_digit78
  L_increment_digit79
  L_increment_digit80
  L_increment_digit81
  L_increment_digit82
  L_increment_digit83
  L_increment_digit84
  L_increment_digit85
  L_increment_digit86
  L_main87
  L_main88
  L_main89
  L_main90
  L_main91
  L_interrupt92
  L_interrupt93
  L_interrupt94
  L_interrupt95
  L_interrupt96
  L_interrupt97
  L_interrupt98
  L_interrupt99
  L_interrupt100
  L__interrupt101
  L_end_bcd_to_seg
  _bcd_to_seg
  L_end_flash_seg
  _flash_seg
  L_end_read_time
  _read_time
  L_end_increment_digit
  _increment_digit
  L_end_main
  _main
  L_end_interrupt
  _interrupt
  L__interrupt108
  L__interrupt109
  L__interrupt110
